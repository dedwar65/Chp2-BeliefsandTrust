--------------------------------------------------------------------------------------------
      name:  <unnamed>
       log:  /Volumes/SSD PRO/Github-forks/Chp2-BeliefsandTrust/Code/Data/HRS_Long/randhrs19
> 92_2022v1_STATA/RAND_2020_merge_and_returns.log
  log type:  text
 opened on:   7 Oct 2025, 17:19:24

. 
. set more off

. 
. * ---------------------------------------------------------------------
. * File paths
. * ---------------------------------------------------------------------
. * Start from the unified analysis dataset so previously saved variables (e.g., 2022 flows)
. * are preserved and augmented with 2020 flows
. local long_file "/Volumes/SSD PRO/Github-forks/Chp2-BeliefsandTrust/Code/Data/HRS_Long/ran
> dhrs1992_2022v1_STATA/_randhrs1992_2022v1_analysis.dta"

. local raw_2020  "/Volumes/SSD PRO/Github-forks/Chp2-BeliefsandTrust/Code/Data/HRS_RAND/_ra
> w/2020/h20f1a_STATA/h20f1a.dta"

. local out_ana   "/Volumes/SSD PRO/Github-forks/Chp2-BeliefsandTrust/Code/Data/HRS_Long/ran
> dhrs1992_2022v1_STATA/_randhrs1992_2022v1_analysis.dta"

. 
. * ---------------------------------------------------------------------
. * Load longitudinal baseline and check key
. * ---------------------------------------------------------------------
. di as txt "=== Loading unified analysis dataset ==="
=== Loading unified analysis dataset ===

. capture confirm file "`long_file'"

. if _rc {
.     di as error "ERROR: baseline longitudinal file not found -> `long_file'"
.     exit 198
. }

. use "`long_file'", clear

. capture confirm variable hhidpn

. if _rc {
.     di as error "ERROR: hhidpn not found in longitudinal baseline"
.     exit 198
. }

. 
. * ---------------------------------------------------------------------
. * Merge in 2020 flows from raw RAND file
. * (Variable names should match 2020 wave; adjust if needed per notes)
. * ---------------------------------------------------------------------
. di as txt "=== Loading 2020 RAND raw file ==="
=== Loading 2020 RAND raw file ===

. preserve

. capture confirm file "`raw_2020'"

. if _rc {
.     di as error "ERROR: RAW 2020 file not found -> `raw_2020'"
.     exit 198
. }

. use "`raw_2020'", clear

. capture confirm variable hhidpn

. if _rc {
.     di as error "ERROR: hhidpn not found in RAW 2020"
.     exit 198
. }

. 
. * TODO: Replace the placeholder list below with exact 2020 flow variables per Notes/2020_r
> eturns_HRS_long.md
. local flow20 "rr050 rr055 rr063 rr064 rr073 rr030 rr035 rr045 rq171_1 rq171_2 rq171_3 rr00
> 7 rr013 rr024"

. 
. di as txt "Checking presence of 2020 flow variables..."
Checking presence of 2020 flow variables...

. foreach v of local flow20 {
  2.     capture confirm variable `v'
  3.     if _rc di as warn "  MISSING in 2020 RAW: `v'"
  4.     else  di as txt  "  OK in 2020 RAW: `v'"
  5. }
  OK in 2020 RAW: rr050
  OK in 2020 RAW: rr055
  OK in 2020 RAW: rr063
  OK in 2020 RAW: rr064
  OK in 2020 RAW: rr073
  OK in 2020 RAW: rr030
  OK in 2020 RAW: rr035
  OK in 2020 RAW: rr045
  OK in 2020 RAW: rq171_1
  OK in 2020 RAW: rq171_2
  OK in 2020 RAW: rq171_3
  OK in 2020 RAW: rr007
  OK in 2020 RAW: rr013
  OK in 2020 RAW: rr024

. 
. keep hhidpn `flow20'

. tempfile raw20_flows

. save "`raw20_flows'", replace
(file /var/folders/17/1rg0y2kj74l9p9g301vbhhkw0000gn/T//S_97518.000003 not found)
file /var/folders/17/1rg0y2kj74l9p9g301vbhhkw0000gn/T//S_97518.000003 saved as .dta format

. restore

. 
. di as txt "=== Merging 2020 flows into longitudinal baseline ==="
=== Merging 2020 flows into longitudinal baseline ===

. merge 1:1 hhidpn using "`raw20_flows'", keep(master match)

    Result                      Number of obs
    -----------------------------------------
    Not matched                         3,688
        from master                     3,688  (_merge==1)
        from using                          0  (_merge==2)

    Matched                            12,168  (_merge==3)
    -----------------------------------------

. tab _merge

   Matching result from |
                  merge |      Freq.     Percent        Cum.
------------------------+-----------------------------------
        Master only (1) |      3,688       23.26       23.26
            Matched (3) |     12,168       76.74      100.00
------------------------+-----------------------------------
                  Total |     15,856      100.00

. drop _merge

. 
. * ---------------------------------------------------------------------
. * Clean special/miscodes for flow inputs (mirror 2022 cleaning rules)
. * ---------------------------------------------------------------------
. local misscodes 999998 999999 9999999 9999998 99999998 99999999 999999999 999999998 999999
> 9999 9999999998 -8 -9

. foreach v of local flow20 {
  2.     capture confirm numeric variable `v'
  3.     if !_rc {
  4.         foreach mc of local misscodes {
  5.             quietly replace `v' = . if `v' == `mc'
  6.         }
  7.     }
  8. }

. 
. * ---------------------------------------------------------------------
. * Compute 2020 flow aggregates (naming parallels 2022, with _2020)
. * ---------------------------------------------------------------------
. * sr063 direction and magnitude
. capture drop rr063_dir20

. gen byte rr063_dir20 = .
(15,856 missing values generated)

. replace rr063_dir20 = -1 if rr063 == 1
(94 real changes made)

. replace rr063_dir20 =  1 if rr063 == 2
(90 real changes made)

. replace rr063_dir20 =  0 if rr063 == 3
(161 real changes made)

. 
. capture drop flow_bus_2020

. gen double flow_bus_2020 = .
(15,856 missing values generated)

. replace flow_bus_2020 = rr055 - rr050 if !missing(rr055) & !missing(rr050)
(2 real changes made)

. replace flow_bus_2020 = rr055 if  missing(rr050) & !missing(rr055)
(23 real changes made)

. replace flow_bus_2020 = -rr050 if !missing(rr050) &  missing(rr055)
(122 real changes made)

. 
. capture drop flow_stk_private_2020

. gen double flow_stk_private_2020 = rr063_dir20 * rr064 if !missing(rr063_dir20) & !missing
> (rr064)
(15,722 missing values generated)

. 
. capture drop flow_stk_public_2020

. gen double flow_stk_public_2020 = rr073 if !missing(rr073)
(15,647 missing values generated)

. 
. capture drop flow_stk_2020

. gen double flow_stk_2020 = cond(!missing(flow_stk_private_2020), flow_stk_private_2020, 0)
>  + ///
>                            cond(!missing(flow_stk_public_2020),  flow_stk_public_2020,  0)

. replace flow_stk_2020 = . if missing(flow_stk_private_2020) & missing(flow_stk_public_2020
> )
(15,513 real changes made, 15,513 to missing)

. 
. capture drop flow_re_2020

. gen double flow_re_2020 = .
(15,856 missing values generated)

. replace flow_re_2020 = cond(missing(rr035),0,rr035) - ( cond(missing(rr030),0,rr030) + con
> d(missing(rr045),0,rr045) ) if !missing(rr035) | !missing(rr030) | !missing(rr045)
(360 real changes made)

. 
. capture drop flow_ira_2020

. egen double flow_ira_2020 = rowtotal(rq171_1 rq171_2 rq171_3)

. replace flow_ira_2020 = . if missing(rq171_1) & missing(rq171_2) & missing(rq171_3)
(14,166 real changes made, 14,166 to missing)

. 
. capture drop flow_residences_2020

. gen double flow_residences_2020 = .
(15,856 missing values generated)

. replace flow_residences_2020 = cond(missing(rr013),0,rr013) - ( cond(missing(rr007),0,rr00
> 7) + cond(missing(rr024),0,rr024) ) if !missing(rr013) | !missing(rr007) | !missing(rr024)
(2,204 real changes made)

. replace flow_residences_2020 = . if missing(rr013) & missing(rr007) & missing(rr024)
(0 real changes made)

. 
. capture drop flow_total_2020

. gen double flow_total_2020 = .
(15,856 missing values generated)

. egen byte any_flow_present20 = rownonmiss(flow_bus_2020 flow_re_2020 flow_stk_2020 flow_ir
> a_2020 flow_residences_2020)

. replace flow_total_2020 = cond(missing(flow_bus_2020),0,flow_bus_2020) + ///
>                           cond(missing(flow_re_2020),0,flow_re_2020) + ///
>                           cond(missing(flow_stk_2020),0,flow_stk_2020) + ///
>                           cond(missing(flow_ira_2020),0,flow_ira_2020) + ///
>                           cond(missing(flow_residences_2020),0,flow_residences_2020) ///
>                           if any_flow_present20 > 0
(3,774 real changes made)

. drop any_flow_present20

. 
. di as txt "Flows 2020 summaries:"
Flows 2020 summaries:

. summarize flow_bus_2020 flow_re_2020 flow_stk_2020 flow_ira_2020 flow_residences_2020 flow
> _total_2020

    Variable |        Obs        Mean    Std. dev.       Min        Max
-------------+---------------------------------------------------------
flow_bu~2020 |        147    49415.91    489033.5   -1400000    3300000
flow_re_2020 |        360    20356.39    266260.1    -910000    1500000
flow_stk_2~0 |        343    57393.46    186532.1    -400000    1500000
flow_ir~2020 |      1,690    29544.67    53572.99          0     700000
flow_resid~0 |      2,204   -19463.31    190594.3   -2000000    1500000
-------------+---------------------------------------------------------
flow_to~2020 |      3,774    10946.41    191390.7   -2000000    4040000

. 
. * ---------------------------------------------------------------------
. * Compute TOTAL RETURNS for 2020 (period 2018-2020)
. * Mirrors compute_tot_ret_2022.do with 2018/2020 variables
. * ---------------------------------------------------------------------
. di as txt "=== Computing 2020 returns (2018-2020) ==="
=== Computing 2020 returns (2018-2020) ===

. 
. * Denominator base: A_{2018}
. capture drop a_2018

. gen double a_2018 = h14atotb
(3,949 missing values generated)

. label var a_2018 "Total net assets (A_2018 = h14atotb)"

. 
. * Capital income y^c_2020
. capture drop y_c_2020

. gen double y_c_2020 = h15icap
(3,688 missing values generated)

. label var y_c_2020 "Capital income 2020 (h15icap)"

. 
. * Capital gains per class: cg_class = V_2020 - V_2018
. capture drop cg_pri_res_2020 cg_sec_res_2020 cg_re_2020 cg_bus_2020 cg_ira_2020 cg_stk_202
> 0 cg_bond_2020 cg_chck_2020 cg_cd_2020 cg_veh_2020 cg_oth_2020

. gen double cg_pri_res_2020 = h15atoth - h14atoth
(4,473 missing values generated)

. gen double cg_sec_res_2020 = h15anethb - h14anethb
(4,473 missing values generated)

. gen double cg_re_2020      = h15arles - h14arles
(4,473 missing values generated)

. gen double cg_bus_2020     = h15absns - h14absns
(4,473 missing values generated)

. gen double cg_ira_2020     = h15aira  - h14aira
(4,473 missing values generated)

. gen double cg_stk_2020     = h15astck - h14astck
(4,473 missing values generated)

. gen double cg_bond_2020    = h15abond - h14abond
(4,473 missing values generated)

. gen double cg_chck_2020    = h15achck - h14achck
(4,473 missing values generated)

. gen double cg_cd_2020      = h15acd   - h14acd
(4,473 missing values generated)

. gen double cg_veh_2020     = h15atran - h14atran
(4,473 missing values generated)

. gen double cg_oth_2020     = h15aothr - h14aothr
(4,473 missing values generated)

. 
. * Summaries of each capital gains component
. di as txt "Capital gains components (2018->2020) summaries:"
Capital gains components (2018->2020) summaries:

. summarize cg_pri_res_2020 cg_sec_res_2020 cg_re_2020 cg_bus_2020 cg_ira_2020 cg_stk_2020 c
> g_bond_2020 cg_chck_2020 cg_cd_2020 cg_veh_2020 cg_oth_2020

    Variable |        Obs        Mean    Std. dev.       Min        Max
-------------+---------------------------------------------------------
cg_pri_~2020 |     11,383    5922.232    970597.2  -9.82e+07    2000000
cg_sec_~2020 |     11,383    1220.486    92224.63   -1750000    2700000
  cg_re_2020 |     11,383    2494.228    219869.2   -7000000    7000000
 cg_bus_2020 |     11,383   -6775.522    440741.5  -2.85e+07    5000000
 cg_ira_2020 |     11,383    8486.837    458226.6  -4.22e+07    6404279
-------------+---------------------------------------------------------
 cg_stk_2020 |     11,383    9505.179    265688.4   -6967899    5795246
cg_bond_2020 |     11,383   -3145.784      126124   -9444461    1866853
cg_chck_2020 |     11,383   -321.5597    189678.1  -1.60e+07    2800000
  cg_cd_2020 |     11,383    747.0598    45524.83   -1033698    3000000
 cg_veh_2020 |     11,383   -2020.805    253570.5  -2.70e+07     400000
-------------+---------------------------------------------------------
 cg_oth_2020 |     11,383   -91.67623    153055.2  -1.10e+07    3700000

. 
. * Total capital gains with missing logic: missing only if all components missing
. capture drop cg_total_2020

. egen byte any_cg_2020 = rownonmiss(cg_pri_res_2020 cg_sec_res_2020 cg_re_2020 cg_bus_2020 
> cg_ira_2020 cg_stk_2020 cg_bond_2020 cg_chck_2020 cg_cd_2020 cg_veh_2020 cg_oth_2020)

. gen double cg_total_2020 = .
(15,856 missing values generated)

. replace cg_total_2020 = cond(missing(cg_pri_res_2020),0,cg_pri_res_2020) + ///
>                         cond(missing(cg_sec_res_2020),0,cg_sec_res_2020) + ///
>                         cond(missing(cg_re_2020),0,cg_re_2020) + ///
>                         cond(missing(cg_bus_2020),0,cg_bus_2020) + ///
>                         cond(missing(cg_ira_2020),0,cg_ira_2020) + ///
>                         cond(missing(cg_stk_2020),0,cg_stk_2020) + ///
>                         cond(missing(cg_bond_2020),0,cg_bond_2020) + ///
>                         cond(missing(cg_chck_2020),0,cg_chck_2020) + ///
>                         cond(missing(cg_cd_2020),0,cg_cd_2020) + ///
>                         cond(missing(cg_veh_2020),0,cg_veh_2020) + ///
>                         cond(missing(cg_oth_2020),0,cg_oth_2020) if any_cg_2020>0
(11,383 real changes made)

. drop any_cg_2020

. 
. * Use cg_total_2020 and flow_total_2020 directly in formulas below
. 
. * Diagnostics
. di as txt "[summarize] y_c_2020, cg_total_2020, flow_total_2020"
[summarize] y_c_2020, cg_total_2020, flow_total_2020

. summarize y_c_2020 cg_total_2020 flow_total_2020

    Variable |        Obs        Mean    Std. dev.       Min        Max
-------------+---------------------------------------------------------
    y_c_2020 |     12,168    14219.75    64953.69          0    3250000
cg_tota~2020 |     11,383    16020.67     1386548  -1.14e+08    8720000
flow_to~2020 |      3,774    10946.41    191390.7   -2000000    4040000

. 
. * Base: A_2018 + 0.5 * F_2020 (treat flows as 0 only when A_2018 is non-missing)
. capture drop base_2020

. gen double base_2020 = .
(15,856 missing values generated)

. replace base_2020 = a_2018 + 0.5 * cond(missing(flow_total_2020),0,flow_total_2020) if !mi
> ssing(a_2018)
(11,907 real changes made)

. label var base_2020 "Base for 2020 returns (A_2018 + 0.5*F_2020)"

. di as txt "[summarize] base_2020"
[summarize] base_2020

. summarize base_2020, detail

         Base for 2020 returns (A_2018 + 0.5*F_2020)
-------------------------------------------------------------
      Percentiles      Smallest
 1%       -70000       -1129500
 5%        -4900       -1129500
10%            0        -988000       Obs              11,907
25%        19500        -597980       Sum of wgt.      11,907

50%       159000                      Mean             555511
                        Largest       Std. dev.       1799356
75%       530000       3.50e+07
90%      1319618       4.06e+07       Variance       3.24e+12
95%      2258500       4.58e+07       Skewness       29.10503
99%      5646550       1.17e+08       Kurtosis       1585.794

. 
. * Period return and annualization (2-year)
. capture drop num_period_2020 r_period_2020 r_annual_2020 r_annual_2020_trim

. gen double num_period_2020 = cond(missing(y_c_2020),0,y_c_2020) + ///
>                              cond(missing(cg_total_2020),0,cg_total_2020) - ///
>                              cond(missing(flow_total_2020),0,flow_total_2020)

. egen byte __num20_has = rownonmiss(y_c_2020 cg_total_2020 flow_total_2020)

. replace num_period_2020 = . if __num20_has == 0
(3,688 real changes made, 3,688 to missing)

. drop __num20_has

. gen double r_period_2020 = num_period_2020 / base_2020
(5,175 missing values generated)

. replace r_period_2020 = . if base_2020 < 10000
(1,721 real changes made, 1,721 to missing)

. gen double r_annual_2020 = (1 + r_period_2020)^(1/2) - 1
(7,043 missing values generated)

. replace r_annual_2020 = . if missing(r_period_2020)
(0 real changes made)

. 
. * Trim 5% tails
. capture drop r_annual_2020_trim

. xtile __p_2020 = r_annual_2020 if !missing(r_annual_2020), n(100)

. gen double r_annual_2020_trim = r_annual_2020
(7,043 missing values generated)

. replace r_annual_2020_trim = . if __p_2020 <= 5 | __p_2020 > 95
(881 real changes made, 881 to missing)

. drop __p_2020

. 
. di as txt "[summarize] r_period_2020, r_annual_2020, r_annual_2020_trim"
[summarize] r_period_2020, r_annual_2020, r_annual_2020_trim

. summarize r_period_2020 r_annual_2020 r_annual_2020_trim

    Variable |        Obs        Mean    Std. dev.       Min        Max
-------------+---------------------------------------------------------
r_perio~2020 |      8,960    .4685195    2.824055  -15.91396    143.802
r_annua~2020 |      8,813    .1062857    .5274556         -1   11.03337
r_ann~0_trim |      7,932    .0632377    .2500585  -.5002112   .8578591

. 
. * Excluding residential housing (remove primary and secondary residence from cg and flows)
. capture drop cg_total_2020_excl_res cg_total_2020_excl_res_safe flow_total_2020_excl_res f
> low_total_2020_excl_res_safe

. gen double flow_total_2020_excl_res = .
(15,856 missing values generated)

. egen byte any_flow20_excl = rownonmiss(flow_bus_2020 flow_re_2020 flow_stk_2020 flow_ira_2
> 020)  // exclude residences

. replace flow_total_2020_excl_res = cond(missing(flow_bus_2020),0,flow_bus_2020) + ///
>                                    cond(missing(flow_re_2020),0,flow_re_2020) + ///
>                                    cond(missing(flow_stk_2020),0,flow_stk_2020) + ///
>                                    cond(missing(flow_ira_2020),0,flow_ira_2020) if any_flo
> w20_excl>0
(2,262 real changes made)

. drop any_flow20_excl

. * No separate safe variable; use inline handling below
. 
. gen double cg_total_2020_excl_res = .
(15,856 missing values generated)

. egen byte any_cg20_excl = rownonmiss(cg_re_2020 cg_bus_2020 cg_ira_2020 cg_stk_2020 cg_bon
> d_2020 cg_chck_2020 cg_cd_2020 cg_veh_2020 cg_oth_2020)

. replace cg_total_2020_excl_res = cond(missing(cg_re_2020),0,cg_re_2020) + ///
>                                  cond(missing(cg_bus_2020),0,cg_bus_2020) + ///
>                                  cond(missing(cg_ira_2020),0,cg_ira_2020) + ///
>                                  cond(missing(cg_stk_2020),0,cg_stk_2020) + ///
>                                  cond(missing(cg_bond_2020),0,cg_bond_2020) + ///
>                                  cond(missing(cg_chck_2020),0,cg_chck_2020) + ///
>                                  cond(missing(cg_cd_2020),0,cg_cd_2020) + ///
>                                  cond(missing(cg_veh_2020),0,cg_veh_2020) + ///
>                                  cond(missing(cg_oth_2020),0,cg_oth_2020) if any_cg20_excl
> >0
(11,383 real changes made)

. drop any_cg20_excl

. * No separate safe variable; use inline handling below
. 
. di as txt "EXCL-RES: cg_total_2020_excl_res and flow_total_2020_excl_res summaries:"
EXCL-RES: cg_total_2020_excl_res and flow_total_2020_excl_res summaries:

. summarize cg_total_2020_excl_res flow_total_2020_excl_res

    Variable |        Obs        Mean    Std. dev.       Min        Max
-------------+---------------------------------------------------------
c~0_excl_res |     11,383    8877.956    844101.2  -4.23e+07    8849279
f~0_excl_res |      2,262    37227.62      186956    -910000    4100000

. 
. * Use SAME base_2020
. capture drop num_period_2020_excl_res r_period_2020_excl_res r_annual_2020_excl_res r_annu
> al_2020_excl_res_trim

. gen double num_period_2020_excl_res = cond(missing(y_c_2020),0,y_c_2020) + ///
>                                       cond(missing(cg_total_2020_excl_res),0,cg_total_2020
> _excl_res) - ///
>                                       cond(missing(flow_total_2020_excl_res),0,flow_total_
> 2020_excl_res)

. egen byte __num20ex_has = rownonmiss(y_c_2020 cg_total_2020_excl_res flow_total_2020_excl_
> res)

. replace num_period_2020_excl_res = . if __num20ex_has == 0
(3,688 real changes made, 3,688 to missing)

. drop __num20ex_has

. gen double r_period_2020_excl_res = num_period_2020_excl_res / base_2020
(5,175 missing values generated)

. replace r_period_2020_excl_res = . if base_2020 < 10000
(1,721 real changes made, 1,721 to missing)

. gen double r_annual_2020_excl_res = (1 + r_period_2020_excl_res)^(1/2) - 1
(6,954 missing values generated)

. replace r_annual_2020_excl_res = . if missing(r_period_2020_excl_res)
(0 real changes made)

. 
. * Trim 5% for excl-res
. xtile __p_ex20 = r_annual_2020_excl_res if !missing(r_annual_2020_excl_res), n(100)

. gen double r_annual_2020_excl_res_trim = r_annual_2020_excl_res
(6,954 missing values generated)

. replace r_annual_2020_excl_res_trim = . if __p_ex20 <= 5 | __p_ex20 > 95
(891 real changes made, 891 to missing)

. drop __p_ex20

. 
. di as txt "[summarize] r_period_2020_excl_res, r_annual_2020_excl_res, r_annual_2020_excl_
> res_trim"
[summarize] r_period_2020_excl_res, r_annual_2020_excl_res, r_annual_2020_excl_res_trim

. summarize r_period_2020_excl_res r_annual_2020_excl_res r_annual_2020_excl_res_trim

    Variable |        Obs        Mean    Std. dev.       Min        Max
-------------+---------------------------------------------------------
r_period_2~s |      8,960    .2494053    1.847162  -3.265091   65.66667
r_annual_2.. |      8,902    .0518436    .3924436         -1   7.164966
r_annual_2.. |      8,011    .0238375    .1635626   -.371833   .5708253

. 
. * ---------------------------------------------------------------------
. * Prepare 2018 controls inline (married_2018, born_us_2018, wealth_*_2018)
. * ---------------------------------------------------------------------
. di as txt "=== Preparing 2018 controls (inline) ==="
=== Preparing 2018 controls (inline) ===

. 
. * Marital status (2018): r14mstat -> married_2018
. capture confirm variable r14mstat

. if _rc {
.     di as error "ERROR: r14mstat not found"
.     exit 198
. }

. capture drop married_2018

. gen byte married_2018 = .
(15,856 missing values generated)

. replace married_2018 = 1 if inlist(r14mstat, 1, 2)
(6,882 real changes made)

. replace married_2018 = 0 if inlist(r14mstat, 3, 4, 5, 6, 7, 8)
(5,005 real changes made)

. label define yesno 0 "no" 1 "yes", replace

. label values married_2018 yesno

. label var married_2018 "Married (r14mstat: 1 or 2) vs not married (3-8)"

. di as txt "Marital status (2018) summary:"
Marital status (2018) summary:

. tab married_2018, missing

    Married |
 (r14mstat: |
 1 or 2) vs |
not married |
      (3-8) |      Freq.     Percent        Cum.
------------+-----------------------------------
         no |      5,005       31.57       31.57
        yes |      6,882       43.40       74.97
          . |      3,969       25.03      100.00
------------+-----------------------------------
      Total |     15,856      100.00

. 
. * Wealth percentile/deciles for 2018 using h14atotb
. capture confirm variable h14atotb

. if _rc {
.     di as error "ERROR: h14atotb not found"
.     exit 198
. }

. capture drop wealth_rank_2018 wealth_pct_2018

. quietly count if !missing(h14atotb)

. local N_wealth18 = r(N)

. egen double wealth_rank_2018 = rank(h14atotb) if !missing(h14atotb)
(3,949 missing values generated)

. gen double wealth_pct_2018 = .
(15,856 missing values generated)

. replace wealth_pct_2018 = 100 * (wealth_rank_2018 - 1) / (`N_wealth18' - 1) if `N_wealth18
> ' > 1 & !missing(wealth_rank_2018)
(11,907 real changes made)

. replace wealth_pct_2018 = 50 if `N_wealth18' == 1 & !missing(wealth_rank_2018)
(0 real changes made)

. label variable wealth_pct_2018 "Wealth percentile (based on h14atotb)"

. di as txt "Wealth percentile (2018) summary:"
Wealth percentile (2018) summary:

. summarize wealth_pct_2018

    Variable |        Obs        Mean    Std. dev.       Min        Max
-------------+---------------------------------------------------------
wealth_pct~8 |     11,907          50    28.86743   .0041996        100

. 
. capture drop wealth_decile_2018

. xtile wealth_decile_2018 = h14atotb if !missing(h14atotb), n(10)

. label var wealth_decile_2018 "Wealth decile (1=lowest,10=highest)"

. di as txt "Wealth decile distribution (2018):"
Wealth decile distribution (2018):

. tab wealth_decile_2018, missing

     Wealth |
     decile |
(1=lowest,1 |
 0=highest) |      Freq.     Percent        Cum.
------------+-----------------------------------
          1 |      1,554        9.80        9.80
          2 |        846        5.34       15.14
          3 |      1,179        7.44       22.57
          4 |      1,184        7.47       30.04
          5 |      1,195        7.54       37.58
          6 |      1,190        7.51       45.08
          7 |      1,189        7.50       52.58
          8 |      1,192        7.52       60.10
          9 |      1,188        7.49       67.59
         10 |      1,190        7.51       75.09
          . |      3,949       24.91      100.00
------------+-----------------------------------
      Total |     15,856      100.00

. 
. forvalues d = 1/10 {
  2.     capture drop wealth_d`d'_2018
  3.     gen byte wealth_d`d'_2018 = wealth_decile_2018 == `d' if !missing(wealth_decile_201
> 8)
  4.     label values wealth_d`d'_2018 yesno
  5.     label var wealth_d`d'_2018 "Wealth decile `d' (2018)"
  6. }
(3,949 missing values generated)
(3,949 missing values generated)
(3,949 missing values generated)
(3,949 missing values generated)
(3,949 missing values generated)
(3,949 missing values generated)
(3,949 missing values generated)
(3,949 missing values generated)
(3,949 missing values generated)
(3,949 missing values generated)

. 
. * Age (2018): carry r14agey_b to age_2018 for consistency
. capture confirm variable r14agey_b

. if _rc {
.     di as error "ERROR: r14agey_b not found"
.     exit 198
. }

. capture drop age_2018

. gen double age_2018 = r14agey_b
(3,949 missing values generated)

. label var age_2018 "Respondent age in 2018 (r14agey_b)"

. di as txt "Age (2018) summary:"
Age (2018) summary:

. summarize age_2018

    Variable |        Obs        Mean    Std. dev.       Min        Max
-------------+---------------------------------------------------------
    age_2018 |     11,907    65.64273    10.30582         22        102

. 
. * Employment (2018): carry r14inlbrf to inlbrf_2018 for consistency
. capture confirm variable r14inlbrf

. if _rc {
.     di as error "ERROR: r14inlbrf not found"
.     exit 198
. }

. capture drop inlbrf_2018

. clonevar inlbrf_2018 = r14inlbrf
(4,022 missing values generated)

. label var inlbrf_2018 "Labor force status in 2018 (r14inlbrf)"

. di as txt "Employment (2018) distribution:"
Employment (2018) distribution:

. tab inlbrf_2018, missing

          Labor force status in 2018 |
                         (r14inlbrf) |      Freq.     Percent        Cum.
-------------------------------------+-----------------------------------
                                0.no |      6,503       41.01       41.01
                               1.yes |      5,331       33.62       74.63
                                   . |      3,949       24.91       99.54
                               .d=dk |          7        0.04       99.58
                .i=institutionalized |         30        0.19       99.77
           .j=web interview, missing |         12        0.08       99.85
                      .m=oth missing |         21        0.13       99.98
                               .r=rf |          3        0.02      100.00
-------------------------------------+-----------------------------------
                               Total |     15,856      100.00

. 
. * Save back to unified analysis dataset
. di as txt "=== Saving updated analysis dataset (with 2020 flows and returns) ==="
=== Saving updated analysis dataset (with 2020 flows and returns) ===

. 
. * Simple N diagnostics for included/excl-res returns (2022 and 2020)
. di as txt "=== N diagnostics (included vs excl-res; 2022 and 2020) ==="
=== N diagnostics (included vs excl-res; 2022 and 2020) ===

. capture confirm variable r_period

. if _rc di as txt "  Note: 2022 returns not in memory (run 2022 returns first if needed)"

. quietly count if !missing(r_period)

. di as txt "  2022 included:   N r_period = " %9.0f r(N)
  2022 included:   N r_period =      9595

. quietly count if !missing(r_annual_2022)

. di as txt "                    N r_annual_2022 = " %9.0f r(N)
                    N r_annual_2022 =      9456

. quietly count if !missing(r_period_excl_res)

. di as txt "  2022 excl-res:   N r_period_excl_res = " %9.0f r(N)
  2022 excl-res:   N r_period_excl_res =      9595

. quietly count if !missing(r_annual_2022_excl_res)

. di as txt "                    N r_annual_2022_excl_res = " %9.0f r(N)
                    N r_annual_2022_excl_res =      9521

. 
. * Both annual and trimmed available (2022 included/excl-res)
. quietly count if !missing(r_annual_2022) & !missing(r_annual_2022_trimmed)

. di as txt "  2022 included:   N with BOTH r_annual & r_annual_trim = " %9.0f r(N)
  2022 included:   N with BOTH r_annual & r_annual_trim =      8513

. quietly count if !missing(r_annual_2022_excl_res) & !missing(r_annual_2022_excl_res_trim)

. di as txt "  2022 excl-res:   N with BOTH r_annual & r_annual_trim = " %9.0f r(N)
  2022 excl-res:   N with BOTH r_annual & r_annual_trim =      8569

. 
. quietly count if !missing(r_period_2020)

. di as txt "  2020 included:   N r_period_2020 = " %9.0f r(N)
  2020 included:   N r_period_2020 =      8960

. quietly count if !missing(r_annual_2020)

. di as txt "                    N r_annual_2020 = " %9.0f r(N)
                    N r_annual_2020 =      8813

. quietly count if !missing(r_period_2020_excl_res)

. di as txt "  2020 excl-res:   N r_period_2020_excl_res = " %9.0f r(N)
  2020 excl-res:   N r_period_2020_excl_res =      8960

. quietly count if !missing(r_annual_2020_excl_res)

. di as txt "                    N r_annual_2020_excl_res = " %9.0f r(N)
                    N r_annual_2020_excl_res =      8902

. 
. * Both annual and trimmed available (2020 included/excl-res)
. quietly count if !missing(r_annual_2020) & !missing(r_annual_2020_trim)

. di as txt "  2020 included:   N with BOTH r_annual & r_annual_trim = " %9.0f r(N)
  2020 included:   N with BOTH r_annual & r_annual_trim =      7932

. quietly count if !missing(r_annual_2020_excl_res) & !missing(r_annual_2020_excl_res_trim)

. di as txt "  2020 excl-res:   N with BOTH r_annual & r_annual_trim = " %9.0f r(N)
  2020 excl-res:   N with BOTH r_annual & r_annual_trim =      8011

. 
. save "`out_ana'", replace
file /Volumes/SSD
    PRO/Github-forks/Chp2-BeliefsandTrust/Code/Data/HRS_Long/randhrs1992_2022v1_STATA/_ran
    > dhrs1992_2022v1_analysis.dta saved

. di as txt "Saved: `out_ana'"
Saved: /Volumes/SSD PRO/Github-forks/Chp2-BeliefsandTrust/Code/Data/HRS_Long/randhrs1992_202
> 2v1_STATA/_randhrs1992_2022v1_analysis.dta

. 
. log close
      name:  <unnamed>
       log:  /Volumes/SSD PRO/Github-forks/Chp2-BeliefsandTrust/Code/Data/HRS_Long/randhrs19
> 92_2022v1_STATA/RAND_2020_merge_and_returns.log
  log type:  text
 closed on:   7 Oct 2025, 17:19:29
--------------------------------------------------------------------------------------------
