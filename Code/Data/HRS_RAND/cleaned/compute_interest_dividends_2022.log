----------------------------------------------------------------------------------------------
      name:  <unnamed>
       log:  /Volumes/SSD PRO/Github-forks/Chp2-BeliefsandTrust/Code/Data/HRS_RAND/cleaned/com
> pute_interest_dividends_2022.log
  log type:  text
 opened on:  24 Sep 2025, 14:41:34

. 
. set more off

. 
. local master "/Volumes/SSD PRO/Github-forks/Chp2-BeliefsandTrust/Code/Data/HRS_RAND/cleaned/
> hrs_rand_2020_2022_master.dta"

. capture confirm file "`master'"

. if _rc {
.     di as error "ERROR: master file not found -> `master'"
.     exit 198
. }

. 
. use "`master'", clear

. 
. di as txt "Using master file: `master'"
Using master file: /Volumes/SSD PRO/Github-forks/Chp2-BeliefsandTrust/Code/Data/HRS_RAND/clean
> ed/hrs_rand_2020_2022_master.dta

. 
. * ---------------------------------------------------------------------
. * Local mappings of RAND variable names (wave-specific locals)
. * NOTE: update these locals to match your RAND/Core variable names if needed
. * ---------------------------------------------------------------------
. local f2022_re   sq139    // rental income frequency

. local a2022_re   sq141    // rental income amount (per period)

. local f2022_bus  sq153    // business income frequency

. local a2022_bus  sq155

. local f2022_ira  sq194    // IRA annuity frequency

. local a2022_ira  sq190

. local f2022_stk  sq322    // stock dividends frequency

. local a2022_stk  sq324

. local f2022_bnd  sq336    // bond interest frequency

. local a2022_bnd  sq338

. local f2022_cash sq350    // checking/savings interest frequency

. local a2022_cash sq352

. local f2022_cds  sq362    // cds/gov bond frequency

. local a2022_cds  sq364

. 
. * ---------------------------------------------------------------------
. * Create per-asset frequency multiplier variables using the explicit
. * mappings derived from the survey coding you provided.
. * ---------------------------------------------------------------------
. 
. * --- Rental income (survey codes you provided):
. * 1 WEEKLY, 2 2x per month, 3 MONTHLY, 4 QUARTERLY, 5 EVERY 6 MONTHS, 6 YEARLY,
. * 7 OTHER, 8 DK, 9 RF, Blank INAP
. capture drop `f2022_re'_mult

. gen double `f2022_re'_mult = .
(14,442 missing values generated)

. quietly replace `f2022_re'_mult = 52 if `f2022_re' == 1

. quietly replace `f2022_re'_mult = 24 if `f2022_re' == 2

. quietly replace `f2022_re'_mult = 12 if `f2022_re' == 3

. quietly replace `f2022_re'_mult = 4  if `f2022_re' == 4

. quietly replace `f2022_re'_mult = 2  if `f2022_re' == 5

. quietly replace `f2022_re'_mult = 1  if `f2022_re' == 6

. * leave 7/8/9/missing as . (OTHER/DK/RF/INAP)
. 
. di as txt "`f2022_re'_mult nonmissing = " _N - sum(missing(`f2022_re'_mult))
sq139_mult nonmissing = 14441

. 
. * --- Business income (survey codes): 1 WEEKLY, 2 2x per month, 3 MONTHLY,
. * 4 QUARTERLY, 5 EVERY 6 MONTHS, 6 YEARLY, 7 OTHER, 8 DK, 9 RF, Blank INAP
. capture drop `f2022_bus'_mult

. gen double `f2022_bus'_mult = .
(14,442 missing values generated)

. quietly replace `f2022_bus'_mult = 52 if `f2022_bus' == 1

. quietly replace `f2022_bus'_mult = 24 if `f2022_bus' == 2

. quietly replace `f2022_bus'_mult = 12 if `f2022_bus' == 3

. quietly replace `f2022_bus'_mult = 4  if `f2022_bus' == 4

. quietly replace `f2022_bus'_mult = 2  if `f2022_bus' == 5

. quietly replace `f2022_bus'_mult = 1  if `f2022_bus' == 6

. 
. di as txt "`f2022_bus'_mult nonmissing = " _N - sum(missing(`f2022_bus'_mult))
sq153_mult nonmissing = 14441

. 
. * --- IRA annuity frequency (survey codes): 3 = MONTH, 4 = QUARTER, 5 = 6 MONTH,
. * 6 = YEAR, 7 = OTHER, 8 = DK, 9 = RF, Blank INAP
. capture drop `f2022_ira'_mult

. gen double `f2022_ira'_mult = .
(14,442 missing values generated)

. quietly replace `f2022_ira'_mult = 12 if `f2022_ira' == 3

. quietly replace `f2022_ira'_mult = 4  if `f2022_ira' == 4

. quietly replace `f2022_ira'_mult = 2  if `f2022_ira' == 5

. quietly replace `f2022_ira'_mult = 1  if `f2022_ira' == 6

. * leave other codes missing
. 
. di as txt "`f2022_ira'_mult nonmissing = " _N - sum(missing(`f2022_ira'_mult))
sq194_mult nonmissing = 14441

. 
. * --- Stock dividends (survey codes): 1 = IT ACCUMULATES OR IS REINVESTED,
. * 3 = MONTHLY, 4 = QUARTERLY, 5 = EVERY 6 MONTHS, 6 = YEARLY, 7 OTHER, 8 DK, 9 RF
. capture drop `f2022_stk'_mult

. gen double `f2022_stk'_mult = .
(14,442 missing values generated)

. quietly replace `f2022_stk'_mult = 0  if `f2022_stk' == 1   // accumulates/reinvested -> no 
> realized cash flow

. quietly replace `f2022_stk'_mult = 12 if `f2022_stk' == 3

. quietly replace `f2022_stk'_mult = 4  if `f2022_stk' == 4

. quietly replace `f2022_stk'_mult = 2  if `f2022_stk' == 5

. quietly replace `f2022_stk'_mult = 1  if `f2022_stk' == 6

. 
. di as txt "`f2022_stk'_mult nonmissing = " _N - sum(missing(`f2022_stk'_mult))
sq322_mult nonmissing = 14441

. 
. * --- Bond interest (survey codes similar to stock): 1 accumulates, 3 monthly,
. * 4 quarterly, 5 every 6 months, 6 yearly, 7 other, 8 DK, 9 RF
. capture drop `f2022_bnd'_mult

. gen double `f2022_bnd'_mult = .
(14,442 missing values generated)

. quietly replace `f2022_bnd'_mult = 0  if `f2022_bnd' == 1

. quietly replace `f2022_bnd'_mult = 12 if `f2022_bnd' == 3

. quietly replace `f2022_bnd'_mult = 4  if `f2022_bnd' == 4

. quietly replace `f2022_bnd'_mult = 2  if `f2022_bnd' == 5

. quietly replace `f2022_bnd'_mult = 1  if `f2022_bnd' == 6

. 
. di as txt "`f2022_bnd'_mult nonmissing = " _N - sum(missing(`f2022_bnd'_mult))
sq336_mult nonmissing = 14441

. 
. * --- Cash (checking/savings) interest: 1 accumulates, 3 monthly, 4 quarterly,
. * 5 every 6 months, 6 yearly, 7 other, 8 DK, 9 RF
. capture drop `f2022_cash'_mult

. gen double `f2022_cash'_mult = .
(14,442 missing values generated)

. quietly replace `f2022_cash'_mult = 0  if `f2022_cash' == 1

. quietly replace `f2022_cash'_mult = 12 if `f2022_cash' == 3

. quietly replace `f2022_cash'_mult = 4  if `f2022_cash' == 4

. quietly replace `f2022_cash'_mult = 2  if `f2022_cash' == 5

. quietly replace `f2022_cash'_mult = 1  if `f2022_cash' == 6

. 
. di as txt "`f2022_cash'_mult nonmissing = " _N - sum(missing(`f2022_cash'_mult))
sq350_mult nonmissing = 14441

. 
. * --- CDs / government bonds / T-bills: 1 accumulates, 3 monthly, 4 quarterly,
. * 5 every 6 months, 6 yearly, 7 other, 8 DK, 9 RF
. capture drop `f2022_cds'_mult

. gen double `f2022_cds'_mult = .
(14,442 missing values generated)

. quietly replace `f2022_cds'_mult = 0  if `f2022_cds' == 1

. quietly replace `f2022_cds'_mult = 12 if `f2022_cds' == 3

. quietly replace `f2022_cds'_mult = 4  if `f2022_cds' == 4

. quietly replace `f2022_cds'_mult = 2  if `f2022_cds' == 5

. quietly replace `f2022_cds'_mult = 1  if `f2022_cds' == 6

. 
. di as txt "`f2022_cds'_mult nonmissing = " _N - sum(missing(`f2022_cds'_mult))
sq362_mult nonmissing = 14441

. 
. * ---------------------------------------------------------------------
. * Annualize amount/per-period variables into interest/dividend components
. * int_*_2022 = amount_per_period * freq_mult
. * We only create the int_* vars if the amount vars exist in the dataset.
. * ---------------------------------------------------------------------
. 
. capture confirm variable `a2022_re'

. if _rc == 0 {
.     capture drop int_re_2022
.     gen double int_re_2022 = .
(14,442 missing values generated)
.     replace int_re_2022 = `a2022_re' * `f2022_re'_mult if !missing(`a2022_re') & !missing(`f
> 2022_re'_mult)
(492 real changes made)
.     di as txt "int_re_2022 computed: nonmissing = " _N - sum(missing(int_re_2022))
int_re_2022 computed: nonmissing = 14441
. }

. 
. capture confirm variable `a2022_bus'

. if _rc == 0 {
.     capture drop int_bus_2022
.     gen double int_bus_2022 = .
(14,442 missing values generated)
.     replace int_bus_2022 = `a2022_bus' * `f2022_bus'_mult if !missing(`a2022_bus') & !missin
> g(`f2022_bus'_mult)
(212 real changes made)
.     di as txt "int_bus_2022 computed: nonmissing = " _N - sum(missing(int_bus_2022))
int_bus_2022 computed: nonmissing = 14441
. }

. 
. capture confirm variable `a2022_ira'

. if _rc == 0 {
.     capture drop int_ira_2022
.     gen double int_ira_2022 = .
(14,442 missing values generated)
.     replace int_ira_2022 = `a2022_ira' * `f2022_ira'_mult if !missing(`a2022_ira') & !missin
> g(`f2022_ira'_mult)
(15 real changes made)
.     di as txt "int_ira_2022 computed: nonmissing = " _N - sum(missing(int_ira_2022))
int_ira_2022 computed: nonmissing = 14441
. }

. 
. capture confirm variable `a2022_stk'

. if _rc == 0 {
.     capture drop int_stk_2022
.     gen double int_stk_2022 = .
(14,442 missing values generated)
.     replace int_stk_2022 = `a2022_stk' * `f2022_stk'_mult if !missing(`a2022_stk') & !missin
> g(`f2022_stk'_mult)
(454 real changes made)
.     di as txt "int_stk_2022 computed: nonmissing = " _N - sum(missing(int_stk_2022))
int_stk_2022 computed: nonmissing = 14441
. }

. 
. capture confirm variable `a2022_bnd'

. if _rc == 0 {
.     capture drop int_bnd_2022
.     gen double int_bnd_2022 = .
(14,442 missing values generated)
.     replace int_bnd_2022 = `a2022_bnd' * `f2022_bnd'_mult if !missing(`a2022_bnd') & !missin
> g(`f2022_bnd'_mult)
(58 real changes made)
.     di as txt "int_bnd_2022 computed: nonmissing = " _N - sum(missing(int_bnd_2022))
int_bnd_2022 computed: nonmissing = 14441
. }

. 
. capture confirm variable `a2022_cash'

. if _rc == 0 {
.     capture drop int_cash_2022
.     gen double int_cash_2022 = .
(14,442 missing values generated)
.     replace int_cash_2022 = `a2022_cash' * `f2022_cash'_mult if !missing(`a2022_cash') & !mi
> ssing(`f2022_cash'_mult)
(1,834 real changes made)
.     di as txt "int_cash_2022 computed: nonmissing = " _N - sum(missing(int_cash_2022))
int_cash_2022 computed: nonmissing = 14441
. }

. 
. capture confirm variable `a2022_cds'

. if _rc == 0 {
.     capture drop int_cds_2022
.     gen double int_cds_2022 = .
(14,442 missing values generated)
.     replace int_cds_2022 = `a2022_cds' * `f2022_cds'_mult if !missing(`a2022_cds') & !missin
> g(`f2022_cds'_mult)
(153 real changes made)
.     di as txt "int_cds_2022 computed: nonmissing = " _N - sum(missing(int_cds_2022))
int_cds_2022 computed: nonmissing = 14441
. }

. 
. * ---------------------------------------------------------------------
. * Summary diagnostics for the mapped multipliers and the annualized components
. * ---------------------------------------------------------------------
. 
. di as txt "=== Frequency multipliers: summary (per asset) ==="
=== Frequency multipliers: summary (per asset) ===

. foreach v in `f2022_re' `f2022_bus' `f2022_ira' `f2022_stk' `f2022_bnd' `f2022_cash' `f2022_
> cds' {
  2.     capture confirm variable `v'_mult
  3.     if _rc == 0 {
  4.         di as txt "Variable: `v'_mult"
  5.         tab `v'_mult, missing
  6.     }
  7. }
Variable: sq139_mult

 sq139_mult |      Freq.     Percent        Cum.
------------+-----------------------------------
          1 |         36        0.25        0.25
          2 |          6        0.04        0.29
          4 |         10        0.07        0.36
         12 |        519        3.59        3.95
         52 |          5        0.03        3.99
          . |     13,866       96.01      100.00
------------+-----------------------------------
      Total |     14,442      100.00
Variable: sq153_mult

 sq153_mult |      Freq.     Percent        Cum.
------------+-----------------------------------
          1 |        126        0.87        0.87
          2 |         32        0.22        1.09
          4 |         22        0.15        1.25
         12 |        132        0.91        2.16
         24 |         19        0.13        2.29
         52 |         43        0.30        2.59
          . |     14,068       97.41      100.00
------------+-----------------------------------
      Total |     14,442      100.00
Variable: sq194_mult

 sq194_mult |      Freq.     Percent        Cum.
------------+-----------------------------------
          1 |          5        0.03        0.03
         12 |         10        0.07        0.10
          . |     14,427       99.90      100.00
------------+-----------------------------------
      Total |     14,442      100.00
Variable: sq322_mult

 sq322_mult |      Freq.     Percent        Cum.
------------+-----------------------------------
          0 |        333        2.31        2.31
          1 |        114        0.79        3.10
          2 |         21        0.15        3.24
          4 |        522        3.61        6.86
         12 |        154        1.07        7.92
          . |     13,298       92.08      100.00
------------+-----------------------------------
      Total |     14,442      100.00
Variable: sq336_mult

 sq336_mult |      Freq.     Percent        Cum.
------------+-----------------------------------
          0 |         61        0.42        0.42
          1 |         32        0.22        0.64
          2 |         21        0.15        0.79
          4 |         35        0.24        1.03
         12 |         45        0.31        1.34
          . |     14,248       98.66      100.00
------------+-----------------------------------
      Total |     14,442      100.00
Variable: sq350_mult

 sq350_mult |      Freq.     Percent        Cum.
------------+-----------------------------------
          0 |        264        1.83        1.83
          1 |        350        2.42        4.25
          2 |         36        0.25        4.50
          4 |        631        4.37        8.87
         12 |      1,992       13.79       22.66
          . |     11,169       77.34      100.00
------------+-----------------------------------
      Total |     14,442      100.00
Variable: sq362_mult

 sq362_mult |      Freq.     Percent        Cum.
------------+-----------------------------------
          0 |        121        0.84        0.84
          1 |        137        0.95        1.79
          2 |         33        0.23        2.01
          4 |         96        0.66        2.68
         12 |        128        0.89        3.57
          . |     13,927       96.43      100.00
------------+-----------------------------------
      Total |     14,442      100.00

. 
. di as txt "=== Annualized interest/dividend components: summary ==="
=== Annualized interest/dividend components: summary ===

. foreach v in int_re_2022 int_bus_2022 int_ira_2022 int_stk_2022 int_bnd_2022 int_cash_2022 i
> nt_cds_2022 {
  2.     capture confirm variable `v'
  3.     if _rc == 0 {
  4.         di as txt "Summary for `v'"
  5.         summarize `v', detail
  6.     }
  7. }
Summary for int_re_2022

                         int_re_2022
-------------------------------------------------------------
      Percentiles      Smallest
 1%            0              0
 5%         3600              0
10%         6000              0       Obs                 492
25%        10110              0       Sum of wgt.         492

50%        18660                      Mean           40018.46
                        Largest       Std. dev.      74396.15
75%        36000         372000
90%        84000         504000       Variance       5.53e+09
95%       168000         600000       Skewness       6.316775
99%       360000         960000       Kurtosis       61.16649
Summary for int_bus_2022

                        int_bus_2022
-------------------------------------------------------------
      Percentiles      Smallest
 1%            0              0
 5%          300              0
10%         2040              0       Obs                 212
25%        15000              0       Sum of wgt.         212

50%        36000                      Mean           81189.09
                        Largest       Std. dev.      134748.3
75%        78000         540000
90%       192000         600000       Variance       1.82e+10
95%       348000         936000       Skewness       3.747136
99%       600000         960000       Kurtosis       20.29091
Summary for int_ira_2022

                        int_ira_2022
-------------------------------------------------------------
      Percentiles      Smallest
 1%          840            840
 5%          840           2100
10%         2100           5256       Obs                  15
25%         6900           6900       Sum of wgt.          15

50%         8400                      Mean            24362.8
                        Largest       Std. dev.      47836.11
75%        18000          18000
90%        48500          26246       Variance       2.29e+09
95%       192000          48500       Skewness       3.150377
99%       192000         192000       Kurtosis       11.56414
Summary for int_stk_2022

                        int_stk_2022
-------------------------------------------------------------
      Percentiles      Smallest
 1%            0              0
 5%            0              0
10%            4              0       Obs                 454
25%          120              0       Sum of wgt.         454

50%         1062                      Mean           15479.59
                        Largest       Std. dev.      74325.05
75%         8000         480000
90%        24000         520000       Variance       5.52e+09
95%        49800         596000       Skewness       11.40207
99%       240000        1200000       Kurtosis       159.4542
Summary for int_bnd_2022

                        int_bnd_2022
-------------------------------------------------------------
      Percentiles      Smallest
 1%            0              0
 5%            0              0
10%            0              0       Obs                  58
25%          300              0       Sum of wgt.          58

50%         3920                      Mean           24864.28
                        Largest       Std. dev.      83534.46
75%        12000          80000
90%        40000         120000       Variance       6.98e+09
95%       120000         204000       Skewness       5.968566
99%       600000         600000       Kurtosis       40.52969
Summary for int_cash_2022

                        int_cash_2022
-------------------------------------------------------------
      Percentiles      Smallest
 1%            0              0
 5%            0              0
10%            0              0       Obs               1,834
25%           12              0       Sum of wgt.       1,834

50%           40                      Mean           1755.626
                        Largest       Std. dev.      23182.18
75%          240         144000
90%         1080         240000       Variance       5.37e+08
95%         3200         600000       Skewness       26.38945
99%        21600         720000       Kurtosis        752.097
Summary for int_cds_2022

                        int_cds_2022
-------------------------------------------------------------
      Percentiles      Smallest
 1%            0              0
 5%            0              0
10%            0              0       Obs                 153
25%           10              0       Sum of wgt.         153

50%          240                      Mean           2402.784
                        Largest       Std. dev.      7957.554
75%         1200          32000
90%         3600          36000       Variance       6.33e+07
95%        12000          40000       Skewness       6.071186
99%        40000          72000       Kurtosis       45.67572

. 
. /* removed total computations; totals will be computed in compute_returns */
. 
. * ---------------------------------------------------------------------
. * Save back to master (overwrite) – comment out if you prefer to save to new file
. * ---------------------------------------------------------------------
. save "`master'", replace
file /Volumes/SSD
    PRO/Github-forks/Chp2-BeliefsandTrust/Code/Data/HRS_RAND/cleaned/hrs_rand_2020_2022_mast
    > er.dta saved

. 
. log close
      name:  <unnamed>
       log:  /Volumes/SSD PRO/Github-forks/Chp2-BeliefsandTrust/Code/Data/HRS_RAND/cleaned/com
> pute_interest_dividends_2022.log
  log type:  text
 closed on:  24 Sep 2025, 14:41:34
----------------------------------------------------------------------------------------------
