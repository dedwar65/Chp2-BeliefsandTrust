--------------------------------------------------------------------------------------
      name:  <unnamed>
       log:  /Volumes/SSD PRO/Github-forks/Chp2-BeliefsandTrust/Code/Data/HRS_RAND/cle
> aned/compute_mortgage_payments_2022.log
  log type:  text
 opened on:  23 Sep 2025, 16:18:00

. 
. set more off

. 
. local master "/Volumes/SSD PRO/Github-forks/Chp2-BeliefsandTrust/Code/Data/HRS_RAND/
> cleaned/hrs_rand_2020_2022_master.dta"

. capture confirm file "`master'"

. if _rc {
.     di as error "ERROR: master file not found -> `master'"
.     exit 198
. }

. 
. use "`master'", clear

. di as txt "Using master file: `master'"
Using master file: /Volumes/SSD PRO/Github-forks/Chp2-BeliefsandTrust/Code/Data/HRS_RA
> ND/cleaned/hrs_rand_2020_2022_master.dta

. 
. * ---------------------------------------------------------------------
. * Variable list for mortgages in RAND (lowercase analogs)
. * sh025 - first mortgage payment amount
. * sh029 - first mortgage payment frequency
. * sh036 - second mortgage payment amount
. * sh040 - second mortgage payment frequency
. * sh175 - secondary residence first mortgage payment amount
. * sh179 - secondary residence first mortgage payment frequency
. * ---------------------------------------------------------------------
. 
. local amtvars "sh025 sh036 sh175"

. local freqvars "sh029 sh040 sh179"

. 
. * ---------------------------------------------------------------------
. * 1) Recode frequency codes 7/8/9 -> missing (BEFORE computations)
. * ---------------------------------------------------------------------
. di as txt "Recoding frequency codes 7,8,9 -> missing for mortgage frequency vars..."
Recoding frequency codes 7,8,9 -> missing for mortgage frequency vars...

. foreach v of local freqvars {
  2.     capture confirm variable `v'
  3.     if _rc {
  4.         di as txt "  Variable `v' not present -> skipping recode"
  5.     }
  6.     else {
  7.         quietly count if inlist(`v',7,8,9)
  8.         di as txt "  `v' records with codes 7/8/9 before recode = " r(N)
  9.         quietly replace `v' = . if inlist(`v',7,8,9)
 10.         quietly count if inlist(`v',7,8,9)
 11.         di as txt "  `v' records with codes 7/8/9 after recode  = " r(N)
 12.         quietly tab `v', missing
 13.     }
 14. }
  sh029 records with codes 7/8/9 before recode = 0
  sh029 records with codes 7/8/9 after recode  = 0
  sh040 records with codes 7/8/9 before recode = 0
  sh040 records with codes 7/8/9 after recode  = 0
  sh179 records with codes 7/8/9 before recode = 0
  sh179 records with codes 7/8/9 after recode  = 0

. 
. * ---------------------------------------------------------------------
. * 2) Clean amount variables: set common sentinel codes -> missing
. * ---------------------------------------------------------------------
. local amt_misscodes 9999998 9999999 -8 -9

. di as txt "Cleaning mortgage amount sentinel codes to missing for: `amtvars'"
Cleaning mortgage amount sentinel codes to missing for: sh025 sh036 sh175

. foreach v of local amtvars {
  2.     capture confirm variable `v'
  3.     if _rc {
  4.         di as txt "  Amount variable `v' not found -> skipping"
  5.     }
  6.     else {
  7.         foreach mc of local amt_misscodes {
  8.             quietly replace `v' = . if `v' == `mc'
  9.         }
 10.         di as txt "  Summary for `v' after recoding sentinels:"
 11.         summarize `v', detail
 12.     }
 13. }
  Summary for sh025 after recoding sentinels:

             amount of payment on first mortgage
-------------------------------------------------------------
      Percentiles      Smallest
 1%          200              0
 5%          400              0
10%          500              0       Obs               2,705
25%          750              0       Sum of wgt.       2,705

50%         1166                      Mean           1404.066
                        Largest       Std. dev.      2465.846
75%         1780           6100
90%         2400           7000       Variance        6080397
95%         3000          22000       Skewness       41.42586
99%         4300         120000       Kurtosis       1981.459
  Summary for sh036 after recoding sentinels:

           amount of payments on 2nd property loan
-------------------------------------------------------------
      Percentiles      Smallest
 1%            0              0
 5%            0              0
10%          100              0       Obs                  61
25%          285              0       Sum of wgt.          61

50%          440                      Mean           577.1967
                        Largest       Std. dev.      487.5541
75%          800           1400
90%         1300           1400       Variance         237709
95%         1400           1800       Skewness       1.495348
99%         2500           2500       Kurtosis       5.736588
  Summary for sh175 after recoding sentinels:

            amount paid all mortgages - 2nd home
-------------------------------------------------------------
      Percentiles      Smallest
 1%          115             50
 5%          230            115
10%          340            135       Obs                 138
25%          700            187       Sum of wgt.         138

50%         1050                      Mean           1334.058
                        Largest       Std. dev.      1274.022
75%         1700           4000
90%         2300           4500       Variance        1623132
95%         3000           4951       Skewness       4.725808
99%         4951          12000       Kurtosis       37.42698

. 
. * ---------------------------------------------------------------------
. * 3) Define program to map freq -> annual multiplier (with counts)
. * ---------------------------------------------------------------------
. capture program drop map_freq_to_mult

. program define map_freq_to_mult, rclass
  1.     syntax varname
  2.     local fq = "`varlist'"
  3.     capture confirm variable `fq'
  4.     if _rc {
  5.         di as txt "  map_freq_to_mult: variable `fq' not found -> exiting program
> "
  6.         exit 0
  7.     }
  8.     capture drop `fq'_mult
  9.     gen double `fq'_mult = .
 10.     quietly replace `fq'_mult = 52 if `fq' == 1
 11.     quietly replace `fq'_mult = 24 if `fq' == 2
 12.     quietly replace `fq'_mult = 12 if `fq' == 3
 13.     quietly replace `fq'_mult = 4  if `fq' == 4
 14.     quietly replace `fq'_mult = 2  if `fq' == 5
 15.     quietly replace `fq'_mult = 1  if `fq' == 6
 16.     quietly count if !missing(`fq'_mult)
 17.     di as txt "  `fq'_mult nonmissing observations = " r(N)
 18.     tab `fq', missing
 19. end

. 
. * ---------------------------------------------------------------------
. * 4) Apply mapping to each mortgage frequency var
. * ---------------------------------------------------------------------
. di as txt "Mapping mortgage frequency variables to multipliers..."
Mapping mortgage frequency variables to multipliers...

. map_freq_to_mult sh029
(14,442 missing values generated)
  sh029_mult nonmissing observations = 2696

  amount of |
 payment on |
      first |
  mortgage- |
        per |      Freq.     Percent        Cum.
------------+-----------------------------------
          2 |          9        0.06        0.06
          3 |      2,679       18.55       18.61
          4 |          2        0.01       18.63
          5 |          2        0.01       18.64
          6 |          4        0.03       18.67
          . |     11,746       81.33      100.00
------------+-----------------------------------
      Total |     14,442      100.00

. map_freq_to_mult sh040
(14,442 missing values generated)
  sh040_mult nonmissing observations = 58

     amt of |
payments on |
   2nd prop |
  loan- per |      Freq.     Percent        Cum.
------------+-----------------------------------
          3 |         58        0.40        0.40
          . |     14,384       99.60      100.00
------------+-----------------------------------
      Total |     14,442      100.00

. map_freq_to_mult sh179
(14,442 missing values generated)
  sh179_mult nonmissing observations = 137

payment all |
mortgages - |
 2nd home - |
        per |      Freq.     Percent        Cum.
------------+-----------------------------------
          2 |          1        0.01        0.01
          3 |        136        0.94        0.95
          . |     14,305       99.05      100.00
------------+-----------------------------------
      Total |     14,442      100.00

. 
. * ---------------------------------------------------------------------
. * 5) Compute annual payments: amount * multiplier
. * ---------------------------------------------------------------------
. di as txt "Computing annual mortgage payments (amount * multiplier)..."
Computing annual mortgage payments (amount * multiplier)...

. 
. capture confirm variable sh025

. if _rc {
.     di as txt "sh025 not found -> mort1_pay_annual set to missing"
.     gen double mort1_pay_annual = .
. }

. else {
.     capture confirm variable sh029_mult
.     if _rc {
.         di as txt "sh029_mult not found -> cannot annualize sh025 -> mort1_pay_annua
> l missing"
.         gen double mort1_pay_annual = .
.     }
.     else {
.         gen double mort1_pay_annual = .
variable mort1_pay_annual already defined
r(110);
.         replace mort1_pay_annual = sh025 * sh029_mult if !missing(sh025) & !missing(
> sh029_mult)
.         di as txt "First mortgage annual payment summary (mort1_pay_annual):"
.         summarize mort1_pay_annual, detail
.  
.     }
r(110);
. }
r(110);

end of do-file

r(110);

. do "/Volumes/SSD PRO/Github-forks/Chp2-BeliefsandTrust/Code/Data/HRS_RAND/cleaned/co
> mpute_cap_gains_2020_2022.do"

. *----------------------------------------------------------------------
. * RAND: compute_capital_gains_2022_simple_residences.do
. * Lowercase RAND vars, same logic
. *----------------------------------------------------------------------
. clear all

. capture log close
