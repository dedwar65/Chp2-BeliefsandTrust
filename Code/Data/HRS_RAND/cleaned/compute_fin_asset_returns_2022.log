----------------------------------------------------------------------------------------------
      name:  <unnamed>
       log:  /Volumes/SSD PRO/Github-forks/Chp2-BeliefsandTrust/Code/Data/HRS_RAND/cleaned/com
> pute_fin_asset_returns_2022.log
  log type:  text
 opened on:  25 Sep 2025, 09:45:13

. 
. set more off

. 
. * ---------------------------------------------------------------------
. * Note: Prerequisite scripts must be run first:
. * - extract_household_2020_ret_calc_end
. * - extract_household_2022_ret_calc_start  
. * - merge_2020_2022
. * - compute_int_inc_div_2020_2022
. * - compute_net_inv_flows_2020_2022
. * - compute_debt_payments_2020_2022
. * - compute_cap_gains_2020_2022
. * - compute_beg_per_net_worth_2020_2022
. * ---------------------------------------------------------------------
. 
. local master "/Volumes/SSD PRO/Github-forks/Chp2-BeliefsandTrust/Code/Data/HRS_RAND/cleaned/
> hrs_rand_2020_2022_master.dta"

. capture confirm file "`master'"

. if _rc {
.     di as error "ERROR: master file not found -> `master'"
.     exit 198
. }

. 
. use "`master'", clear

. di as txt "Using master file: `master'"
Using master file: /Volumes/SSD PRO/Github-forks/Chp2-BeliefsandTrust/Code/Data/HRS_RAND/clean
> ed/hrs_rand_2020_2022_master.dta

. 
. * ---------------------------------------------------------------------
. * Raw variable locals (align with compute_int_inc_div_2020_2022.do)
. * ---------------------------------------------------------------------
. local f2022_stk  sq322

. local a2022_stk  sq324

. local f2022_bnd  sq336

. local a2022_bnd  sq338

. local f2022_cash sq350

. local a2022_cash sq352

. local f2022_cds  sq362

. local a2022_cds  sq364

. 
. * ---------------------------------------------------------------------
. * Define financial asset sample
. * Baseline: stocks OR bonds in both years
. * Augmented: OR any numerator signal (any int_* non-missing OR stock flows non-missing)
. * ---------------------------------------------------------------------
. di as txt "=== Defining financial asset sample ==="
=== Defining financial asset sample ===

. 
. * Check for stocks in both years (sq317 and rq317)
. gen byte has_stocks_both = !missing(sq317) & !missing(rq317)

. 
. * Check for bonds in both years (sq331 and rq331)  
. gen byte has_bonds_both = !missing(sq331) & !missing(rq331)

. 
. * Exposure via numerator components present (raw checks)
. * Interest income exposure: amount present AND mapped frequency multiplier present
. gen byte fin_exposure = 0

. replace fin_exposure = 1 if !missing(`a2022_stk')  & !missing(`f2022_stk'_mult)
(454 real changes made)

. replace fin_exposure = 1 if !missing(`a2022_bnd')  & !missing(`f2022_bnd'_mult)
(31 real changes made)

. replace fin_exposure = 1 if !missing(`a2022_cash') & !missing(`f2022_cash'_mult)
(1,599 real changes made)

. replace fin_exposure = 1 if !missing(`a2022_cds')  & !missing(`f2022_cds'_mult)
(45 real changes made)

. * Stock flow exposure: either private (sr064 with sr063_dir) or public sells (sr073)
. replace fin_exposure = 1 if (!missing(sr064) & !missing(sr063_dir)) | !missing(sr073)
(129 real changes made)

. 
. * Financial asset sample: baseline OR exposure
. gen byte fin_sample = has_stocks_both | has_bonds_both | fin_exposure

. 
. * Report sample statistics
. di as txt "Sample definition results:"
Sample definition results:

. tab fin_sample, missing

 fin_sample |      Freq.     Percent        Cum.
------------+-----------------------------------
          0 |     11,951       82.75       82.75
          1 |      2,491       17.25      100.00
------------+-----------------------------------
      Total |     14,442      100.00

. quietly count if fin_sample == 1

. local n_fin_sample = r(N)

. quietly count

. local n_total = r(N)

. di as txt "Households in financial asset sample: `n_fin_sample' out of `n_total' (" %4.1f 10
> 0*`n_fin_sample'/`n_total' "%)"
Households in financial asset sample: 2491 out of 14442 (17.2%)

. 
. * Breakdown by asset type
. di as txt "Breakdown by asset type:"
Breakdown by asset type:

. tab has_stocks_both has_bonds_both, missing

has_stocks |    has_bonds_both
     _both |         0          1 |     Total
-----------+----------------------+----------
         0 |    13,737         26 |    13,763 
         1 |       640         39 |       679 
-----------+----------------------+----------
     Total |    14,377         65 |    14,442 

. di as txt "Additional inclusions due to numerator exposure:"
Additional inclusions due to numerator exposure:

. tab fin_exposure if !has_stocks_both & !has_bonds_both, missing

fin_exposur |
          e |      Freq.     Percent        Cum.
------------+-----------------------------------
          0 |     11,951       87.00       87.00
          1 |      1,786       13.00      100.00
------------+-----------------------------------
      Total |     13,737      100.00

. quietly count if has_stocks_both & has_bonds_both

. di as txt "Households with BOTH stocks and bonds in both years: " r(N)
Households with BOTH stocks and bonds in both years: 39

. quietly count if has_stocks_both & !has_bonds_both

. di as txt "Households with stocks only (both years): " r(N)
Households with stocks only (both years): 640

. quietly count if !has_stocks_both & has_bonds_both

. di as txt "Households with bonds only (both years): " r(N)
Households with bonds only (both years): 26

. 
. * ---------------------------------------------------------------------
. * Denominator components
. * ---------------------------------------------------------------------
. di as txt "=== Denominator components (A_2020, F_2022) ==="
=== Denominator components (A_2020, F_2022) ===

. 
. capture drop A_2020

. gen double A_2020 = networth_A2020 if fin_sample
(12,398 missing values generated)

. 
. * ---------------------------------------------------------------------
. * Compute financial asset flows (F_fin_2022) for numerator
. * ---------------------------------------------------------------------
. di as txt "=== Computing financial asset flows (F_fin_2022) for numerator ==="
=== Computing financial asset flows (F_fin_2022) for numerator ===

. 
. * Financial asset flows = stock flows only (bonds have no flows)
. capture drop F_fin_2022

. gen double F_fin_2022 = .
(14,442 missing values generated)

. * For stocks: use flow_stk_2022, treat missing as 0 if they have stocks in both years
. * For bonds: no flows, so always 0
. replace F_fin_2022 = cond(missing(flow_stk_2022),0,flow_stk_2022) if fin_sample
(2,491 real changes made)

. 
. di as txt "Financial asset flows (F_fin_2022) summary:"
Financial asset flows (F_fin_2022) summary:

. summarize F_fin_2022 if fin_sample, detail

                         F_fin_2022
-------------------------------------------------------------
      Percentiles      Smallest
 1%       -25000       -2000000
 5%            0        -300000
10%            0        -300000       Obs               2,491
25%            0        -250000       Sum of wgt.       2,491

50%            0                      Mean           4996.339
                        Largest       Std. dev.      68491.88
75%            0         600000
90%            0         730000       Variance       4.69e+09
95%        20000        1000000       Skewness      -2.017859
99%       200000        1600000       Kurtosis       446.5252

. tabstat F_fin_2022 if fin_sample, stats(n mean sd p50 min max) format(%12.2f)

    Variable |            N         Mean           SD          p50          Min          Max
-------------+------------------------------------------------------------------------------
  F_fin_2022 |      2491.00      4996.34     68491.88         0.00  -2000000.00   1600000.00
--------------------------------------------------------------------------------------------

. 
. * ---------------------------------------------------------------------
. * Use total flows (F_2022) as denominator
. * ---------------------------------------------------------------------
. di as txt "=== Using total flows (F_2022) component for denominator ==="
=== Using total flows (F_2022) component for denominator ===

. 
. * Use existing flow_total_2022 (total net investment flows)
. capture drop F_2022

. gen double F_2022 = flow_total_2022 if fin_sample
(13,166 missing values generated)

. * Treat missing total flows as 0 for financial sample
. replace F_2022 = 0 if missing(F_2022) & fin_sample
(1,215 real changes made)

. 
. di as txt "Total flows (F_2022) summary:"
Total flows (F_2022) summary:

. summarize F_2022 if fin_sample, detail

                           F_2022
-------------------------------------------------------------
      Percentiles      Smallest
 1%      -345000       -6400000
 5%       -75000       -2050000
10%       -25000       -1840000       Obs               2,491
25%            0       -1750000       Sum of wgt.       2,491

50%            0                      Mean           18473.19
                        Largest       Std. dev.      238186.9
75%         6000        2550000
90%        66000        2862500       Variance       5.67e+10
95%       189000        3450000       Skewness      -4.128058
99%       735000        3474000       Kurtosis       269.8203

. tabstat F_2022 if fin_sample, stats(n mean sd p50 min max) format(%12.2f)

    Variable |            N         Mean           SD          p50          Min          Max
-------------+------------------------------------------------------------------------------
      F_2022 |      2491.00     18473.19    238186.87         0.00  -6400000.00   3474000.00
--------------------------------------------------------------------------------------------

. 
. * ---------------------------------------------------------------------
. * Compute financial asset interest income (yc_fin_2022)
. * ---------------------------------------------------------------------
. di as txt "=== Computing financial asset interest income (yc_fin_2022) ==="
=== Computing financial asset interest income (yc_fin_2022) ===

. 
. * Financial asset interest = stocks + bonds + checking/savings + CDs
. capture drop yc_fin_2022

. gen double yc_fin_2022 = .
(14,442 missing values generated)

. * Sum interest income from financial assets, treat missing as 0 if they have financial asset
> s
. replace yc_fin_2022 = cond(missing(int_stk_2022),0,int_stk_2022) + ///
>                      cond(missing(int_bnd_2022),0,int_bnd_2022) + ///
>                      cond(missing(int_cash_2022),0,int_cash_2022) + ///
>                      cond(missing(int_cds_2022),0,int_cds_2022) if fin_sample
(2,491 real changes made)

. 
. di as txt "Financial asset interest income (yc_fin_2022) summary:"
Financial asset interest income (yc_fin_2022) summary:

. summarize yc_fin_2022 if fin_sample, detail

                         yc_fin_2022
-------------------------------------------------------------
      Percentiles      Smallest
 1%            0              0
 5%            0              0
10%            0              0       Obs               2,491
25%            0              0       Sum of wgt.       2,491

50%           36                      Mean           4840.348
                        Largest       Std. dev.      47626.88
75%          420         596000
90%         4140         600000       Variance       2.27e+09
95%        13200         800000       Skewness       26.31733
99%        78000        1800012       Kurtosis       875.0643

. tabstat yc_fin_2022 if fin_sample, stats(n mean sd p50 min max) format(%12.2f)

    Variable |            N         Mean           SD          p50          Min          Max
-------------+------------------------------------------------------------------------------
 yc_fin_2022 |      2491.00      4840.35     47626.88        36.00         0.00   1800012.00
--------------------------------------------------------------------------------------------

. 
. * ---------------------------------------------------------------------
. * Compute financial asset capital gains (cg_fin_2022)
. * ---------------------------------------------------------------------
. di as txt "=== Computing financial asset capital gains (cg_fin_2022) ==="
=== Computing financial asset capital gains (cg_fin_2022) ===

. 
. * Financial asset capital gains = stocks + bonds
. capture drop cg_fin_2022

. gen double cg_fin_2022 = .
(14,442 missing values generated)

. * Sum capital gains from financial assets, treat missing as 0 if they have financial assets
. replace cg_fin_2022 = cond(missing(cg_stk_2022),0,cg_stk_2022) + ///
>                      cond(missing(cg_bnd_2022),0,cg_bnd_2022) if fin_sample
(2,491 real changes made)

. 
. di as txt "Financial asset capital gains (cg_fin_2022) summary:"
Financial asset capital gains (cg_fin_2022) summary:

. summarize cg_fin_2022 if fin_sample, detail

                         cg_fin_2022
-------------------------------------------------------------
      Percentiles      Smallest
 1%      -511318       -4100000
 5%       -50000       -2600000
10%            0       -2300000       Obs               2,491
25%            0       -2300000       Sum of wgt.       2,491

50%            0                      Mean           31719.53
                        Largest       Std. dev.      365954.3
75%            0        4600000
90%        48500        5000000       Variance       1.34e+11
95%       200000        6423425       Skewness       8.544287
99%      1365000        7553000       Kurtosis       158.6708

. tabstat cg_fin_2022 if fin_sample, stats(n mean sd p50 min max) format(%12.2f)

    Variable |            N         Mean           SD          p50          Min          Max
-------------+------------------------------------------------------------------------------
 cg_fin_2022 |      2491.00     31719.53    365954.30         0.00  -4100000.00   7553000.00
--------------------------------------------------------------------------------------------

. 
. * ---------------------------------------------------------------------
. * Compute financial asset returns
. * ---------------------------------------------------------------------
. di as txt "=== Computing financial asset returns ==="
=== Computing financial asset returns ===

. 
. * Denominator: A_2020 + 0.5*F_2022
. capture drop denom_fin_2022

. gen double denom_fin_2022 = A_2020 + 0.5*F_2022 if fin_sample
(12,398 missing values generated)

. 
. * Check for positive denominators and apply final wealth threshold
. gen byte denom_fin_positive = denom_fin_2022 > 0 if fin_sample
(11,951 missing values generated)

. gen byte denom_fin_above_10k = denom_fin_2022 >= 10000 if fin_sample
(11,951 missing values generated)

. 
. di as txt "Financial asset denominator (A_2020 + 0.5*F_2022) summary BEFORE final threshold:
> "
Financial asset denominator (A_2020 + 0.5*F_2022) summary BEFORE final threshold:

. summarize denom_fin_2022 if fin_sample, detail

                       denom_fin_2022
-------------------------------------------------------------
      Percentiles      Smallest
 1%       -49000        -296000
 5%         2500        -164500
10%        19000        -130900       Obs               2,044
25%       150850        -129900       Sum of wgt.       2,044

50%       440500                      Mean             899101
                        Largest       Std. dev.       1497683
75%      1052125       1.35e+07
90%      2130000       1.45e+07       Variance       2.24e+12
95%      3330000       1.88e+07       Skewness       5.364531
99%      7048100       2.27e+07       Kurtosis       50.24601

. tabstat denom_fin_2022 if fin_sample, stats(n mean sd p50 min max) format(%12.2f)

    Variable |            N         Mean           SD          p50          Min          Max
-------------+------------------------------------------------------------------------------
denom_f~2022 |      2044.00    899101.02   1497683.44    440500.00   -296000.00  22671500.00
--------------------------------------------------------------------------------------------

. 
. * Count before applying denominator threshold
. quietly count if fin_sample == 1

. local n_initial_sample = r(N)

. di as txt "Initial sample size before denominator threshold: `n_initial_sample'"
Initial sample size before denominator threshold: 2491

. 
. * Update financial sample to include final denominator threshold
. replace fin_sample = fin_sample & denom_fin_above_10k
(157 real changes made)

. 
. di as txt "Final sample restriction results:"
Final sample restriction results:

. quietly count if fin_sample == 1

. local n_final_sample = r(N)

. di as txt "Final sample size after denominator threshold (≥$10k): `n_final_sample'"
Final sample size after denominator threshold (≥$10k): 2334

. di as txt "Observations dropped due to negative/small denominators: `=`n_initial_sample'-`n_
> final_sample''"
Observations dropped due to negative/small denominators: 157

. 
. di as txt "Financial asset denominator (A_2020 + 0.5*F_2022) summary AFTER final threshold:"
Financial asset denominator (A_2020 + 0.5*F_2022) summary AFTER final threshold:

. summarize denom_fin_2022 if fin_sample, detail

                       denom_fin_2022
-------------------------------------------------------------
      Percentiles      Smallest
 1%        12200          10000
 5%        38000          10000
10%        75800          10000       Obs               1,887
25%       202800          10000       Sum of wgt.       1,887

50%       495000                      Mean           975327.3
                        Largest       Std. dev.       1534259
75%      1102000       1.35e+07
90%      2248000       1.45e+07       Variance       2.35e+12
95%      3447455       1.88e+07       Skewness        5.27407
99%      7521500       2.27e+07       Kurtosis       48.34925

. tabstat denom_fin_2022 if fin_sample, stats(n mean sd p50 min max) format(%12.2f)

    Variable |            N         Mean           SD          p50          Min          Max
-------------+------------------------------------------------------------------------------
denom_f~2022 |      1887.00    975327.33   1534259.40    495000.00     10000.00  22671500.00
--------------------------------------------------------------------------------------------

. 
. * ---------------------------------------------------------------------
. * Summary of all key components before return calculation
. * ---------------------------------------------------------------------
. di as txt "=== Summary of all key components ==="
=== Summary of all key components ===

. 
. di as txt "Numerator components:"
Numerator components:

. di as txt "  Interest income (yc_fin_2022):"
  Interest income (yc_fin_2022):

. summarize yc_fin_2022 if fin_sample, detail

                         yc_fin_2022
-------------------------------------------------------------
      Percentiles      Smallest
 1%            0              0
 5%            0              0
10%            0              0       Obs               2,334
25%            0              0       Sum of wgt.       2,334

50%           40                      Mean           5148.413
                        Largest       Std. dev.      49186.77
75%          480         596000
90%         4800         600000       Variance       2.42e+09
95%        15200         800000       Skewness       25.48147
99%        80000        1800012       Kurtosis       820.3771

. di as txt "  Capital gains (cg_fin_2022):"
  Capital gains (cg_fin_2022):

. summarize cg_fin_2022 if fin_sample, detail

                         cg_fin_2022
-------------------------------------------------------------
      Percentiles      Smallest
 1%      -550000       -4100000
 5%       -75000       -2600000
10%        -1000       -2300000       Obs               2,334
25%            0       -2300000       Sum of wgt.       2,334

50%            0                      Mean           33528.13
                        Largest       Std. dev.      377764.2
75%            0        4600000
90%        50100        5000000       Variance       1.43e+11
95%       221197        6423425       Skewness       8.274473
99%      1420000        7553000       Kurtosis       148.9866

. di as txt "  Net investment flows (F_fin_2022):"
  Net investment flows (F_fin_2022):

. summarize F_fin_2022 if fin_sample, detail

                         F_fin_2022
-------------------------------------------------------------
      Percentiles      Smallest
 1%       -25000       -2000000
 5%            0        -300000
10%            0        -250000       Obs               2,334
25%            0        -250000       Sum of wgt.       2,334

50%            0                      Mean           5389.409
                        Largest       Std. dev.      70398.27
75%            0         600000
90%            0         730000       Variance       4.96e+09
95%        24000        1000000       Skewness      -1.969181
99%       200000        1600000       Kurtosis       426.9069

. 
. di as txt "Denominator components:"
Denominator components:

. di as txt "  Beginning wealth (A_2020):"
  Beginning wealth (A_2020):

. summarize A_2020 if fin_sample, detail

                           A_2020
-------------------------------------------------------------
      Percentiles      Smallest
 1%        11500         -93000
 5%        39000         -82900
10%        77000           3000       Obs               1,887
25%       200845           5000       Sum of wgt.       1,887

50%       486000                      Mean           963951.7
                        Largest       Std. dev.       1507558
75%      1102000       1.31e+07
90%      2212000       1.42e+07       Variance       2.27e+12
95%      3460000       1.85e+07       Skewness       5.285624
99%      7076000       2.27e+07       Kurtosis       49.36671

. di as txt "  Total flows (F_2022):"
  Total flows (F_2022):

. summarize F_2022 if fin_sample, detail

                           F_2022
-------------------------------------------------------------
      Percentiles      Smallest
 1%      -340000       -6400000
 5%       -72000       -2050000
10%       -25000       -1840000       Obs               2,334
25%            0       -1750000       Sum of wgt.       2,334

50%            0                      Mean           21139.58
                        Largest       Std. dev.      244925.2
75%         8000        2550000
90%        76000        2862500       Variance       6.00e+10
95%       200000        3450000       Skewness      -4.069473
99%       750000        3474000       Kurtosis       257.7231

. di as txt "  Final denominator (A_2020 + 0.5*F_2022):"
  Final denominator (A_2020 + 0.5*F_2022):

. summarize denom_fin_2022 if fin_sample, detail

                       denom_fin_2022
-------------------------------------------------------------
      Percentiles      Smallest
 1%        12200          10000
 5%        38000          10000
10%        75800          10000       Obs               1,887
25%       202800          10000       Sum of wgt.       1,887

50%       495000                      Mean           975327.3
                        Largest       Std. dev.       1534259
75%      1102000       1.35e+07
90%      2248000       1.45e+07       Variance       2.35e+12
95%      3447455       1.88e+07       Skewness        5.27407
99%      7521500       2.27e+07       Kurtosis       48.34925

. 
. * Cross-tabulation of component presence
. di as txt "Component presence patterns:"
Component presence patterns:

. quietly count if !missing(yc_fin_2022) & fin_sample

. di as txt "  yc_fin_2022 non-missing: " r(N)
  yc_fin_2022 non-missing: 2334

. quietly count if !missing(cg_fin_2022) & fin_sample

. di as txt "  cg_fin_2022 non-missing: " r(N)
  cg_fin_2022 non-missing: 2334

. quietly count if !missing(F_fin_2022) & fin_sample

. di as txt "  F_fin_2022 non-missing: " r(N)
  F_fin_2022 non-missing: 2334

. quietly count if !missing(A_2020) & fin_sample

. di as txt "  A_2020 non-missing: " r(N)
  A_2020 non-missing: 1887

. quietly count if !missing(F_2022) & fin_sample

. di as txt "  F_2022 non-missing: " r(N)
  F_2022 non-missing: 2334

. 
. * Return calculation (sample already filtered for positive denominators ≥$10k)
. capture drop r_fin_2022

. gen double r_fin_2022 = .
(14,442 missing values generated)

. replace r_fin_2022 = (yc_fin_2022 + cg_fin_2022 - F_fin_2022) / denom_fin_2022 if fin_sample
(1,887 real changes made)

. 
. * ---------------------------------------------------------------------
. * Report return statistics
. * ---------------------------------------------------------------------
. di as txt "=== Financial asset returns summary ==="
=== Financial asset returns summary ===

. 
. di as txt "Summary stats for financial asset returns (r_fin_2022):"
Summary stats for financial asset returns (r_fin_2022):

. summarize r_fin_2022 if fin_sample, detail

                         r_fin_2022
-------------------------------------------------------------
      Percentiles      Smallest
 1%    -.5094972      -2.633333
 5%    -.1603162      -1.419557
10%    -.0485054          -1.25       Obs               1,887
25%            0      -1.237333       Sum of wgt.       1,887

50%     .0002424                      Mean           .0319397
                        Largest       Std. dev.       .333491
75%      .007923       2.349256
90%     .1287745            2.4       Variance       .1112162
95%     .2814499       3.464286       Skewness       14.63199
99%     .9731233       9.714286       Kurtosis       394.8311

. tabstat r_fin_2022 if fin_sample, stats(n mean sd p50 min max) format(%12.4f)

    Variable |            N         Mean           SD          p50          Min          Max
-------------+------------------------------------------------------------------------------
  r_fin_2022 |    1887.0000       0.0319       0.3335       0.0002      -2.6333       9.7143
--------------------------------------------------------------------------------------------

. 
. * Count valid returns
. quietly count if !missing(r_fin_2022) & fin_sample

. local n_valid_returns = r(N)

. di as txt "Records with valid r_fin_2022 computed = `n_valid_returns' out of `n_fin_sample' 
> in financial sample"
Records with valid r_fin_2022 computed = 1887 out of 2491 in financial sample

. 
. * ---------------------------------------------------------------------
. * Apply trimming (top and bottom 5%)
. * ---------------------------------------------------------------------
. di as txt "=== Applying 5% trimming to financial asset returns ==="
=== Applying 5% trimming to financial asset returns ===

. 
. * Calculate trim thresholds (5% from each tail)
. _pctile r_fin_2022 if fin_sample & !missing(r_fin_2022), p(5 95)

. scalar trim_low = r(r1)

. scalar trim_high = r(r2)

. 
. di as txt "Trim thresholds: `=trim_low' to `=trim_high'"
Trim thresholds: -.1603162055335969 to .2814498933901919

. 
. * Create trimmed returns
. capture drop r_fin_2022_trim

. gen double r_fin_2022_trim = r_fin_2022 if fin_sample & !missing(r_fin_2022) & inrange(r_fin
> _2022, trim_low, trim_high)
(12,743 missing values generated)

. 
. * Report trimming results
. quietly count if !missing(r_fin_2022_trim)

. local n_trim = r(N)

. quietly count if fin_sample & !missing(r_fin_2022)

. local n_original = r(N)

. di as txt "Observations after 5% trimming: `n_trim' (dropped `=`n_original'-`n_trim'')"
Observations after 5% trimming: 1699 (dropped 188)

. 
. * Trimmed returns summary
. di as txt "Trimmed financial asset returns summary:"
Trimmed financial asset returns summary:

. summarize r_fin_2022_trim, detail

                       r_fin_2022_trim
-------------------------------------------------------------
      Percentiles      Smallest
 1%    -.1240951      -.1603162
 5%    -.0516854      -.1599035
10%    -.0181347      -.1586931       Obs               1,699
25%     8.49e-06      -.1526971       Sum of wgt.       1,699

50%     .0002424                      Mean           .0122548
                        Largest       Std. dev.      .0561868
75%     .0053563       .2762431
90%      .066876       .2767773       Variance        .003157
95%     .1397952       .2768102       Skewness       1.944136
99%     .2426564       .2814499       Kurtosis       9.691464

. tabstat r_fin_2022_trim, stats(n mean sd p50 min max) format(%12.4f)

    Variable |            N         Mean           SD          p50          Min          Max
-------------+------------------------------------------------------------------------------
r_fin_2022~m |    1699.0000       0.0123       0.0562       0.0002      -0.1603       0.2814
--------------------------------------------------------------------------------------------

. 
. * ---------------------------------------------------------------------
. * Diagnostics: show extremes and component breakdowns
. * ---------------------------------------------------------------------
. di as txt "=== Diagnostics: component inspection (no top-20 listings) ==="
=== Diagnostics: component inspection (no top-20 listings) ===

. 
. * ---------------------------------------------------------------------
. * Zero-value checks for summed components
. * ---------------------------------------------------------------------
. di as txt "=== Zero-value checks for components (financial) ==="
=== Zero-value checks for components (financial) ===

. quietly count if yc_fin_2022 == 0 & fin_sample

. di as txt "yc_fin_2022 equals 0 in sample: " r(N)
yc_fin_2022 equals 0 in sample: 599

. quietly count if cg_fin_2022 == 0 & fin_sample

. di as txt "cg_fin_2022 equals 0 in sample: " r(N)
cg_fin_2022 equals 0 in sample: 1695

. quietly count if F_fin_2022 == 0 & fin_sample

. di as txt "F_fin_2022 equals 0 in sample: " r(N)
F_fin_2022 equals 0 in sample: 2070

. 
. * ---------------------------------------------------------------------
. * Additional: Compute separate stock and bond returns (no structural changes)
. * ---------------------------------------------------------------------
. di as txt "=== Computing separate stock and bond returns ==="
=== Computing separate stock and bond returns ===

. 
. * ---------------------------
. * STOCK RETURNS
. * ---------------------------
. di as txt "-- Stock returns --"
-- Stock returns --

. 
. * Sample: stocks in both years OR exposure via income or stock flows
. capture drop has_stk_both

. gen byte has_stk_both = !missing(sq317) & !missing(rq317)

. capture drop stk_exposure

. gen byte stk_exposure = 0

. replace stk_exposure = 1 if !missing(`a2022_stk') & !missing(`f2022_stk'_mult)
(454 real changes made)

. replace stk_exposure = 1 if (!missing(sr064) & !missing(sr063_dir)) | !missing(sr073)
(206 real changes made)

. capture drop stk_sample

. gen byte stk_sample = has_stk_both | stk_exposure

. 
. * Denominator components for stocks
. capture drop A_2020_stk

. gen double A_2020_stk = networth_A2020 if stk_sample
(13,521 missing values generated)

. capture drop F_2022_stk

. gen double F_2022_stk = flow_total_2022 if stk_sample
(13,759 missing values generated)

. replace F_2022_stk = 0 if missing(F_2022_stk) & stk_sample
(340 real changes made)

. capture drop denom_stk_2022

. gen double denom_stk_2022 = A_2020_stk + 0.5*F_2022_stk if stk_sample
(13,521 missing values generated)

. capture drop denom_stk_above_10k

. gen byte denom_stk_above_10k = denom_stk_2022 >= 10000 if stk_sample
(13,419 missing values generated)

. replace stk_sample = stk_sample & denom_stk_above_10k
(19 real changes made)

. 
. * Numerator: yc, cg, flows
. capture drop yc_stk_2022

. gen double yc_stk_2022 = int_stk_2022 if stk_sample
(13,998 missing values generated)

. replace yc_stk_2022 = 0 if missing(yc_stk_2022) & stk_sample
(560 real changes made)

. capture drop cg_stk_used_2022

. gen double cg_stk_used_2022 = cg_stk_2022 if stk_sample
(13,776 missing values generated)

. replace cg_stk_used_2022 = 0 if missing(cg_stk_used_2022) & stk_sample
(338 real changes made)

. capture drop F_stk_2022

. gen double F_stk_2022 = flow_stk_2022 if stk_sample
(14,171 missing values generated)

. replace F_stk_2022 = 0 if missing(F_stk_2022) & stk_sample
(733 real changes made)

. 
. * Return and trimming
. capture drop r_stk_2022

. gen double r_stk_2022 = (yc_stk_2022 + cg_stk_used_2022 - F_stk_2022) / denom_stk_2022 if st
> k_sample
(13,540 missing values generated)

. quietly _pctile r_stk_2022 if stk_sample & !missing(r_stk_2022), p(5 95)

. scalar stk_p5 = r(r1)

. scalar stk_p95 = r(r2)

. capture drop r_stk_2022_trim

. gen double r_stk_2022_trim = r_stk_2022 if stk_sample & !missing(r_stk_2022) & inrange(r_stk
> _2022, stk_p5, stk_p95)
(13,630 missing values generated)

. 
. * Summaries
. di as txt "Stock returns summary (raw):"
Stock returns summary (raw):

. summarize r_stk_2022 if stk_sample, detail

                         r_stk_2022
-------------------------------------------------------------
      Percentiles      Smallest
 1%      -.66918      -2.633333
 5%    -.3220612       -1.41966
10%    -.1639344      -1.301333       Obs                 902
25%    -.0275482          -1.25       Sum of wgt.         902

50%     .0025342                      Mean           .0492228
                        Largest       Std. dev.       .352372
75%     .0832178       2.333333
90%     .2676399       2.349256       Variance        .124166
95%     .4690363            2.4       Skewness       2.724633
99%     1.715485       3.464286       Kurtosis       29.39237

. tabstat r_stk_2022 if stk_sample, stats(n mean sd p50 min max) format(%12.4f)

    Variable |            N         Mean           SD          p50          Min          Max
-------------+------------------------------------------------------------------------------
  r_stk_2022 |     902.0000       0.0492       0.3524       0.0025      -2.6333       3.4643
--------------------------------------------------------------------------------------------

. di as txt "Stock returns summary (trimmed):"
Stock returns summary (trimmed):

. summarize r_stk_2022_trim, detail

                       r_stk_2022_trim
-------------------------------------------------------------
      Percentiles      Smallest
 1%    -.2748008      -.3220612
 5%    -.1754386      -.3177966
10%    -.0986717      -.3174603       Obs                 812
25%    -.0222843      -.3149171       Sum of wgt.         812

50%     .0025342                      Mean           .0273522
                        Largest       Std. dev.      .1246581
75%     .0666174       .4345464
90%     .1945098        .440816       Variance       .0155396
95%     .2834467       .4504505       Skewness       .6808005
99%     .4082883       .4690363       Kurtosis       4.728621

. tabstat r_stk_2022_trim, stats(n mean sd p50 min max) format(%12.4f)

    Variable |            N         Mean           SD          p50          Min          Max
-------------+------------------------------------------------------------------------------
r_stk_2022~m |     812.0000       0.0274       0.1247       0.0025      -0.3221       0.4690
--------------------------------------------------------------------------------------------

. 
. * ---------------------------
. * BOND RETURNS
. * ---------------------------
. di as txt "-- Bond returns --"
-- Bond returns --

. 
. * Sample: bonds in both years OR exposure via income (no flow component for bonds)
. capture drop has_bnd_both

. gen byte has_bnd_both = !missing(sq331) & !missing(rq331)

. capture drop bnd_exposure

. gen byte bnd_exposure = 0

. replace bnd_exposure = 1 if !missing(`a2022_bnd') & !missing(`f2022_bnd'_mult)
(58 real changes made)

. capture drop bnd_sample

. gen byte bnd_sample = has_bnd_both | bnd_exposure

. 
. * Denominator components for bonds
. capture drop A_2020_bnd

. gen double A_2020_bnd = networth_A2020 if bnd_sample
(14,355 missing values generated)

. capture drop F_2022_bnd

. gen double F_2022_bnd = flow_total_2022 if bnd_sample
(14,379 missing values generated)

. replace F_2022_bnd = 0 if missing(F_2022_bnd) & bnd_sample
(33 real changes made)

. capture drop denom_bnd_2022

. gen double denom_bnd_2022 = A_2020_bnd + 0.5*F_2022_bnd if bnd_sample
(14,355 missing values generated)

. capture drop denom_bnd_above_10k

. gen byte denom_bnd_above_10k = denom_bnd_2022 >= 10000 if bnd_sample
(14,346 missing values generated)

. replace bnd_sample = bnd_sample & denom_bnd_above_10k
(1 real change made)

. 
. * Numerator: yc, cg, flows (flows = 0 for bonds)
. capture drop yc_bnd_2022

. gen double yc_bnd_2022 = int_bnd_2022 if bnd_sample
(14,384 missing values generated)

. replace yc_bnd_2022 = 0 if missing(yc_bnd_2022) & bnd_sample
(37 real changes made)

. capture drop cg_bnd_used_2022

. gen double cg_bnd_used_2022 = cg_bnd_2022 if bnd_sample
(14,378 missing values generated)

. replace cg_bnd_used_2022 = 0 if missing(cg_bnd_used_2022) & bnd_sample
(31 real changes made)

. capture drop F_bnd_2022

. gen double F_bnd_2022 = 0 if bnd_sample
(14,347 missing values generated)

. 
. * Return and trimming
. capture drop r_bnd_2022

. gen double r_bnd_2022 = (yc_bnd_2022 + cg_bnd_used_2022 - F_bnd_2022) / denom_bnd_2022 if bn
> d_sample
(14,356 missing values generated)

. quietly _pctile r_bnd_2022 if bnd_sample & !missing(r_bnd_2022), p(5 95)

. scalar bnd_p5 = r(r1)

. scalar bnd_p95 = r(r2)

. capture drop r_bnd_2022_trim

. gen double r_bnd_2022_trim = r_bnd_2022 if bnd_sample & !missing(r_bnd_2022) & inrange(r_bnd
> _2022, bnd_p5, bnd_p95)
(14,364 missing values generated)

. 
. * Summaries
. di as txt "Bond returns summary (raw):"
Bond returns summary (raw):

. summarize r_bnd_2022 if bnd_sample, detail

                         r_bnd_2022
-------------------------------------------------------------
      Percentiles      Smallest
 1%    -.3738462      -.3738462
 5%     -.137931      -.2466488
10%    -.0774954      -.1652637       Obs                  86
25%    -.0160061      -.1649534       Sum of wgt.          86

50%     .0010833                      Mean           .1235506
                        Largest       Std. dev.      1.052212
75%     .0211962       .3425076
90%     .0998603       .4425755       Variance       1.107151
95%     .2648305       .4485742       Skewness       8.957798
99%     9.714286       9.714286       Kurtosis       82.16035

. tabstat r_bnd_2022 if bnd_sample, stats(n mean sd p50 min max) format(%12.4f)

    Variable |            N         Mean           SD          p50          Min          Max
-------------+------------------------------------------------------------------------------
  r_bnd_2022 |      86.0000       0.1236       1.0522       0.0011      -0.3738       9.7143
--------------------------------------------------------------------------------------------

. di as txt "Bond returns summary (trimmed):"
Bond returns summary (trimmed):

. summarize r_bnd_2022_trim, detail

                       r_bnd_2022_trim
-------------------------------------------------------------
      Percentiles      Smallest
 1%     -.137931       -.137931
 5%    -.0837321      -.0993377
10%    -.0564972      -.0913563       Obs                  78
25%    -.0098728      -.0837321       Sum of wgt.          78

50%     .0010833                      Mean           .0080528
                        Largest       Std. dev.      .0601583
75%      .020202       .1303496
90%     .0731539       .1773585       Variance        .003619
95%     .1303496       .2138138       Skewness       1.565731
99%     .2648305       .2648305       Kurtosis       8.346766

. tabstat r_bnd_2022_trim, stats(n mean sd p50 min max) format(%12.4f)

    Variable |            N         Mean           SD          p50          Min          Max
-------------+------------------------------------------------------------------------------
r_bnd_2022~m |      78.0000       0.0081       0.0602       0.0011      -0.1379       0.2648
--------------------------------------------------------------------------------------------

. 
. * ---------------------------------------------------------------------
. * Save dataset with new financial asset return variables
. * ---------------------------------------------------------------------
. save "`master'", replace
file /Volumes/SSD
    PRO/Github-forks/Chp2-BeliefsandTrust/Code/Data/HRS_RAND/cleaned/hrs_rand_2020_2022_mast
    > er.dta saved

. di as txt "Saved financial asset return variables to master: `master'"
Saved financial asset return variables to master: /Volumes/SSD PRO/Github-forks/Chp2-Beliefsan
> dTrust/Code/Data/HRS_RAND/cleaned/hrs_rand_2020_2022_master.dta

. 
. di as txt "Done. Financial asset returns computed with 5% trimming."
Done. Financial asset returns computed with 5% trimming.

. 
end of do-file

. do "/Volumes/SSD PRO/Github-forks/Chp2-BeliefsandTrust/Code/Data/HRS_RAND/cleaned/compute_bu
> s_returns_2020_2022.do"

. *----------------------------------------------------------------------
. * RAND: compute_bus_returns.do
. * Compute returns for BUSINESS assets for 2022
. * Using lowercase RAND variable names
. *
. * Formula: r_bus = (yc_bus + cg_bus - F_bus) / (A_2020 + 0.5*F_2022)
. *
. * Where:
. * - yc_bus = business income (annualized from frequency/amount)
. * - cg_bus = capital gains for business
. * - F_bus  = net investment flows into business
. * - A_2020 = total beginning period net worth
. * - F_2022 = total net investment flows (all asset classes)
. *----------------------------------------------------------------------
. clear all

. capture log close
